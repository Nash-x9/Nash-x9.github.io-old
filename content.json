{"meta":{"title":"小九博客","subtitle":null,"description":"小九博客致力于分享程序员路上遇到的各种坑","author":"Joe shengxin","url":"https://war9.cn"},"pages":[{"title":"关于我","date":"2017-12-28T07:49:51.000Z","updated":"2018-01-15T05:13:18.050Z","comments":true,"path":"about/index.html","permalink":"https://war9.cn/about/index.html","excerpt":"","text":"关于作者 about me 个人信息 中文 English 乔盛欣/男/1994 Joe/Male/1994 本科/计算机科学与技术专业 Bachelor degree in computer science and techn 工作年限：经验应届(2018)毕业生 Graduating in 2018 博客：https://war9.cn Blog：https://war9.cn 联系方式 Welcome to contact me. &nbsp;Email: x9sec888@gmail.com / x9_sec@163.com Phone:132**6320 //请通过邮件联系获取 &nbsp;&nbsp;&nbsp;&nbsp;QQ:1649880988 捐助本站如果本站文章对您有所帮助，本站接受以捐助的形式来支持博主。十分感谢！本站默认会以支付名称写到捐助名单，如要修改捐助信息，请联系我！ 捐助排行 姓名 捐赠形式 捐赠时间 捐赠金额 联系方式 其它 王超 支付宝 2018-1-5 120元 QQ：976127505 赵建 支付宝 2018-1-9 60元 QQ：785011138 *丙昆 支付宝 2018-1-5 60元 QQ：3113229956 *志鹏 支付宝 2018-1-5 60元 QQ：1056609804 *港福 支付宝 2018-1-5 60元 QQ：1933588244"}],"posts":[{"title":"Django安装部署","slug":"Django-MariaDB-Install","date":"2018-02-12T02:02:00.000Z","updated":"2018-02-12T03:06:17.982Z","comments":true,"path":"2018/02/12/Django-MariaDB-Install.html","link":"","permalink":"https://war9.cn/2018/02/12/Django-MariaDB-Install.html","excerpt":"","text":"前言近期在做个一个分布式爬虫项目，欲使用Django做爬虫的控制和数据展示。 因此本文将记录在安装编写Django应用时遇到的坑。 本文环境为Python2.7+Django1.11.10+Mariadb10.2.7 安装 查看是否安装Django 1python -c \"import django; print(django.get_version())\" 如果有版本号输出，说明已经安装过了，安装步骤就可以跳过。 如果没有则 pip 进行安装 安装 1pip install django 再次使用django.get_version()查看版本信息 123user@Joe MINGW64 /d/PythonWorkSpace/wikiCrawler$ python -c \"import django; print(django.get_version())\"1.11.10 安装成功 新建数据库 本文默认在安装好Mariadb10.2.7的情况下。首先新建一个数据库。 1create database crawler 创建Django项目 切换至你想要存放代码的目录，执行如下命令创建Django项目 crawler可以改成你的项目名称 1django-admin startproject crawler 创建完毕后可以看到如下目录文件结构 1234567mysite/ manage.py crawler/ __init__.py settings.py urls.py wsgi.py 修改yourProject/setting.py配置 配置中国时区和语言 12LANGUAGE_CODE = 'zh-hans'TIME_ZONE = 'Asia/Shanghai' 配置数据库 12345678910DATABASES = &#123; 'default': &#123; 'ENGINE': 'django.db.backends.mysql', 'NAME': 'DB_NAME', 'USER': 'DB_USER', 'PASSWORD': 'DB_PASS', 'HOST': '127.0.0.1', 'PORT': '3306', &#125;&#125; 安装Mysql-python驱动 在使用pip-install mysql-python的时候，发现这个驱动依赖于VC++9.0安装报错 12building '_mysql' extensionerror: Microsoft Visual C++ 9.0 is required. Get it from http://aka.ms/vcpython27 到 http://aka.ms/vcpython27 下载相应库。发现还是编译错误。。 最后还是到官网下载 安装包进行下载。https://pypi.python.org/pypi/MySQL-python/此时报错消失，成功解决了。 migrate 导入数据库 切换到manage.py所在目录 执行如下命令。 1python manage.py migrate 提示如下： 12345678910111213141516 Operations to perform: Apply all migrations: admin, auth, contenttypes, sessionsRunning migrations: Applying contenttypes.0001_initial... OK Applying auth.0001_initial... OK Applying admin.0001_initial... OK Applying admin.0002_logentry_remove_auto_add... OK Applying contenttypes.0002_remove_content_type_name... OK Applying auth.0002_alter_permission_name_max_length... OK Applying auth.0003_alter_user_email_max_length... OK Applying auth.0004_alter_user_username_opts... OK Applying auth.0005_alter_user_last_login_null... OK Applying auth.0006_require_contenttypes_0002... OK Applying auth.0007_alter_validators_add_error_messages... OK Applying auth.0008_alter_user_username_max_length... OK Applying sessions.0001_initial... OK 自此Django+MariaDB连接成功。 文档资料参考 http://python.usyiyi.cn/documents/django_182/index.htmlhttps://docs.djangoproject.com/en/2.0/","categories":[{"name":"后端","slug":"backend","permalink":"https://war9.cn/categories/backend/"},{"name":"Django","slug":"backend/Django","permalink":"https://war9.cn/categories/backend/Django/"}],"tags":[{"name":"Django","slug":"Django","permalink":"https://war9.cn/tags/Django/"},{"name":"Python","slug":"Python","permalink":"https://war9.cn/tags/Python/"},{"name":"MariaDB","slug":"MariaDB","permalink":"https://war9.cn/tags/MariaDB/"}],"keywords":[{"name":"后端","slug":"backend","permalink":"https://war9.cn/categories/backend/"},{"name":"Django","slug":"backend/Django","permalink":"https://war9.cn/categories/backend/Django/"}]},{"title":"Glary Utilities PRO注册码","slug":"GlaryUtilities注册码","date":"2018-02-11T09:47:00.000Z","updated":"2018-02-12T02:51:52.956Z","comments":true,"path":"2018/02/11/GlaryUtilities注册码.html","link":"","permalink":"https://war9.cn/2018/02/11/GlaryUtilities注册码.html","excerpt":"","text":"Glary Utilities 是一个一站式电脑优化解决方案软件。 功能列表： √ 清理系统垃圾文件(临时文件、无用注册表、上网记录) √ 管理和删除IE插件 √ 分析磁盘空间使用情况，查找重复文件 √ 优化内存 √ 管理自启动程序 √ 卸载软件 本软件本来是免费版本，是一个替代360的不错选择，不会对系统做出太多的修改。但是近期推出了PRO 专业版。于是进行了爆破，在一顿分析后..本以为破解成功..结果随便输入的 AAAA-AAAA-AAAA-AAAA 是他隐藏的内置Key…大家拿去用把。233 注册码： AAAA-AAAA-AAAA-AAAA","categories":[{"name":"其它","slug":"other","permalink":"https://war9.cn/categories/other/"}],"tags":[{"name":"Glary Utilities Pro","slug":"Glary-Utilities-Pro","permalink":"https://war9.cn/tags/Glary-Utilities-Pro/"},{"name":"注册码","slug":"注册码","permalink":"https://war9.cn/tags/注册码/"}],"keywords":[{"name":"其它","slug":"other","permalink":"https://war9.cn/categories/other/"}]},{"title":"PHP-GD库漏洞可导致服务器宕机","slug":"GD库漏洞可导致服务器宕机","date":"2018-02-02T03:04:00.000Z","updated":"2018-02-02T05:38:54.358Z","comments":true,"path":"2018/02/02/GD库漏洞可导致服务器宕机.html","link":"","permalink":"https://war9.cn/2018/02/02/GD库漏洞可导致服务器宕机.html","excerpt":"","text":"简介通过精心构造的恶意图片，可以在GD库使用imagecreatefromgif函数载入图像时，导致cpu耗尽，实现拒绝服务攻击。因此如果项目中使用GD库处理图片，要特别注意。 CVE编号：CVE-2018-5711 漏洞影响版本 PHP 5 &lt; 5.6.33 PHP 7.0 &lt; 7.0.27 PHP 7.1 &lt; 7.1.13 PHP 7.2 &lt; 7.2.1 漏洞细节漏洞存在于文件ext/gd/libgd/gd_gifin.c中，其中在LWZReadByte函数中存在一个循环（while-loop）：1234do &#123; sd-&gt;firstcode = sd-&gt;oldcode = GetCode(fd, &amp;sd-&gt;scd, sd-&gt;code_size, FALSE, ZeroDataBlockP);&#125; while (sd-&gt;firstcode == sd-&gt;clear_code); 其调用的GetCode1234567891011static intGetCode_(gdIOCtx *fd, CODE_STATIC_DATA *scd, int code_size, int flag, int *ZeroDataBlockP)&#123; int i, j, ret; unsigned char count; ... if ((count = GetDataBlock(fd, &amp;scd-&gt;buf[2], ZeroDataBlockP)) &lt;= 0) scd-&gt;done = TRUE; ...&#125; GetCode_ 会调用GetDataBlock来读取GIF图片中的数据：12345678910111213141516static intGetDataBlock_(gdIOCtx *fd, unsigned char *buf, int *ZeroDataBlockP)&#123; unsigned char count; if (! ReadOK(fd,&amp;count,1)) &#123; return -1; &#125; *ZeroDataBlockP = count == 0; if ((count != 0) &amp;&amp; (! ReadOK(fd, buf, count))) &#123; return -1; &#125; return count;&#125; 该漏洞依赖于从整形（int）到无符号字符（unsigned char）的类型转换。如果GetDataBlock_返回-1，则第400行中的scd-&gt;done将会被设置为True，并停止while循环。但是其定义的count是无符号字符，它总是从0到255的正数，所以这种循环停止动作是不会被触发执行的。 因此，最终结果就是，一张GIF图片就可以实现无限循环，导致服务器资源耗尽，直到崩溃宕机。 漏洞验证刚好本机开发使用的PHP版本是7.1.8，属于漏洞影响范围。 将构造好的Poc下载到本地。1curl -L https://git.io/vN0n4 | xxd -r &gt; poc.gif 新建一个PHP文件，使用imagecreatefromgif函数载入Poc12&lt;?phpimagecreatefromgif(\"poc.gif\"); 因为本机的环境限制了PHP CPU的使用，可以避免物理机死机。不过仍可以看到这时CPU占用达到了35%左右。这时PHP服务已经宕掉了。访问其它项目，发现也无法访问报504错误。 漏洞修复更新PHP版本Url:http://php.net/downloads.php更新后，继续测试Poc，会提示1imagecreatefromgif(): 'poc.gif' is not a valid GIF file in 注：PHP7.2禁用了Object作为类名。一些框架（比如Yii2）或者之前的项目设计很多使用了Object。因此升级到7.2版本需要注意。为了兼容我本机暂时只升级到7.1的最新版本。 2018年2月2日 - PHP 7.1.14.如果升级PHP7.2，更多变更查看https://wiki.php.net/rfc/deprecations_php_7_2 文中部分引用以下链接内容。内容有删改。https://bugs.php.net/bug.php?id=75571http://php.net/ChangeLog-7.phphttp://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2018-5711http://www.freebuf.com/vuls/161262.html","categories":[{"name":"PHP","slug":"php","permalink":"https://war9.cn/categories/php/"}],"tags":[{"name":"PHP","slug":"PHP","permalink":"https://war9.cn/tags/PHP/"},{"name":"PHP漏洞","slug":"PHP漏洞","permalink":"https://war9.cn/tags/PHP漏洞/"},{"name":"GD库漏洞","slug":"GD库漏洞","permalink":"https://war9.cn/tags/GD库漏洞/"}],"keywords":[{"name":"PHP","slug":"php","permalink":"https://war9.cn/categories/php/"}]},{"title":"Codeception(三)","slug":"Codeception-three","date":"2018-01-29T03:38:00.000Z","updated":"2018-02-02T03:58:07.328Z","comments":true,"path":"2018/01/29/Codeception-three.html","link":"","permalink":"https://war9.cn/2018/01/29/Codeception-three.html","excerpt":"","text":"前言前两篇文章介绍了安装和单元测试。 这篇文章我们来介绍Fixture概念和功能测试、验收测试。 功能测试和验收测试在Codeception中，部分代码和测试流程很相似，所以我们也来说一下功能测试和验收测试的区别。 Fixture概念Fixtures 是测试中非常重要的一部分。他们的主要目的是建立一个固定/已知的环境状态以确保测试可重复并且按照预期方式运行。Yii 提供一个简单可用的 Fixure 框架 允许你精确的定义你的 Fixtures 。 Yii 的 Fixture 框架的核心概念称之为 fixture object 。一个 Fixture object代表一个测试环境的某个特定方面，它是 yii\\test\\Fixture 或者其子类的实例。 比如，你可以使用 UserFixture 来确保用户DB表包含固定的数据。 你在运行一个测试之前加载一个或者多个 fixture object，并在结束后卸载他们。 如果使用该功能，记的创建自己的测试DB，并且在test-local里配置DB。该功能在卸载时，会清空数据库。 官方文档:http://www.yiiframework.com/doc-2.0/guide-test-fixtures.html 功能测试和验收测试的区别 功能测试 Functional Testing 功能测试主要用于测试我们是否创建了正确的产品，逐项测试各个功能。对于这种类型的测试，要涵盖所有可能情景的测试用例，即使这种情况在“现实环境”中不太可能存在。当进行这种类型的测试时，我们的目标是最大的代码覆盖率。 验收测试 Acceptance Testing 验收测试是部署软件之前的最后一个测试操作。验收测试的目的是确保软件准备就绪，并且可以让最终用户将其用于执行软件的既定功能和任务。这部分测试通常是与客户或内部测试人员合作完成的。对于这种类型的测试，我们使用的测试用例涵盖了我们期望软件使用的典型场景。该测试主要测试以下几个点 可靠性，可用性：压力测试 扩展性：负载测试进行验证。 可用性：界面是否符合用户习惯等 安全性：代码审计、入侵测试 可维护性：通过演示如何提供软件更新/补丁来验证。 可配置性：通过证明客户如何修改系统配置来满足他们的需求来进行验证。 功能测试 使用模版创建功能测试同样的，我们使用模板来创建一个功能测试。 1codecept g:cest functional StudentCest 创建好的文件会在tests/functional下.内容如下： 1234567891011121314151617181920&lt;?phpnamespace backend\\tests;use backend\\tests\\FunctionalTester;class StudentCest&#123; public function _before(FunctionalTester $I) &#123; &#125; public function _after(FunctionalTester $I) &#123; &#125; // tests public function tryToTest(FunctionalTester $I) &#123; &#125;&#125; 可以看到内容和之前创建的Test模板很像。 不同的是，这里的方法多了一个参数functionalTester。 其实这个参数就是我们在Codeception（二）里面所说的actor概念。传送门：点我跳转 配置比如我们这里对登录功能做测试。需要使用到数据库，所以我们首先应配置数据库。 修改config/test-local.php,如果我们项目中使用了多个数据库，也要配置多个db。 1234567891011121314151617181920212223 &lt;?php return yii\\helpers\\ArrayHelper::merge( require __DIR__ . '/../../common/config/test-local.php', require __DIR__ . '/main.php', require __DIR__ . '/main-local.php', require __DIR__ . '/test.php', [ 'components' =&gt; [ 'db' =&gt; [ 'dsn' =&gt; 'mysql:host=localhost;dbname=yii2-test', 'username' =&gt; '', 'password' =&gt; '', ], 'db2' =&gt; [ 'class' =&gt; 'yii\\db\\Connection', 'dsn' =&gt; 'mysql:host=localhost;dbname=yii2-test2', 'username' =&gt; '', 'password' =&gt; '', 'charset' =&gt; 'utf8', ], ], ]); 定义Fixture定义Fixture，用于指定账号密码登录修改刚才模板生成的文件，加入以下方法： 123456789public function _fixtures()&#123; return [ 'user' =&gt; [ 'class' =&gt; UserFixture::className(), 'dataFile' =&gt; codecept_data_dir() . 'login_data.php', ] ];&#125; 注：该方法会在Yii2::_before()里自动调用 然后我们需要在tests/_data文件夹下写入登录数据 /tests/_data/login_data.php 1234567891011121314&lt;?php return [ [ 'username' =&gt; 'erau', 'auth_key' =&gt; 'tUu1qHcde0diwUol3xeI-18MuHkkprQI', // password_0 'password_hash' =&gt; '$2y$13$nJ1WDlBaGcbCdbNC5.5l4.sgy.OMEKCqtDQOdQ2OWpgiKRWYyzzne', 'password_reset_token' =&gt; 'RkD_Jw0_8HEedzLk7MM-ZKEFfYR7VbMr_1392559490', 'created_at' =&gt; '1392559490', 'updated_at' =&gt; '1392559490', 'email' =&gt; 'sfriesen@jenkins.info', ],]; 编写测试方法 123456789 public function loginUser(FunctionalTester $I)&#123; $I-&gt;amOnRoute('site/login'); $I-&gt;fillField('LoginForm[username]', 'erau'); $I-&gt;fillField('LoginForm[password]', 'password_0'); $I-&gt;click('login-button'); $I-&gt;see('退出 (erau)'); $I-&gt;dontSeeLink('登录');&#125; 运行功能测试 1codecept run 一些其它说明 _before的使用 比如我们在做登录功能测试时，不仅要测试正确的账号密码是否可以登录，还要考虑用户名密码为空时，是否会显示用户名密码不能为空这样的提示。也要测试错误的密码是否会提示密码错误。这就需要我们每次测试之前跳转到登录页面。 因此可以写如下代码，每次测试时，恢复路由。 1234public function _before(FunctionalTester $I)&#123; $I-&gt;amOnRoute('site/login');&#125; 验收测试验收测试编写流程和功能测试大体相同，不再赘述。","categories":[{"name":"后端","slug":"backend","permalink":"https://war9.cn/categories/backend/"},{"name":"Yii2","slug":"backend/Yii2","permalink":"https://war9.cn/categories/backend/Yii2/"}],"tags":[{"name":"单元测试","slug":"单元测试","permalink":"https://war9.cn/tags/单元测试/"},{"name":"codeception","slug":"codeception","permalink":"https://war9.cn/tags/codeception/"},{"name":"Yii2","slug":"Yii2","permalink":"https://war9.cn/tags/Yii2/"}],"keywords":[{"name":"后端","slug":"backend","permalink":"https://war9.cn/categories/backend/"},{"name":"Yii2","slug":"backend/Yii2","permalink":"https://war9.cn/categories/backend/Yii2/"}]},{"title":"Yii2 Event事件-场景应用","slug":"Yii2-Event事件-场景应用","date":"2018-01-24T09:25:00.000Z","updated":"2018-01-26T05:43:28.703Z","comments":true,"path":"2018/01/24/Yii2-Event事件-场景应用.html","link":"","permalink":"https://war9.cn/2018/01/24/Yii2-Event事件-场景应用.html","excerpt":"","text":"yii2-事件 系列 第二篇 前言通过Yii2的事件功能，为我们的项目开发带来了极大的便捷性。本文在介绍几个比较特别的事件同时，将通过介绍几个应用场景的方式，来更贴切实际开发。 更多事件请查看Yii2速查表或我的上篇文章Yii2 Event事件-初识 EVENT_AFTER_FIND在查询结束后，会触发EVENT_AFTER_FIND事件。注意Yii2里没有EVENT_BEFORE_FIND事件(查询前)。 而EVENT_AFTER_FIND和其它事件不同的是 虽然该常量定义是BaseActiveRecord::EVENT_AFTER_FIND， 但是该事件触发位置由yii\\db\\ActiveQuery触发。具体位置 1yii\\db\\ActiveQuery::populate() 使用场景 文章发布日期显示2分钟前这样的格式。 1.绑定事件 12345678910\\yii\\base\\Event::on( BaseActiveRecord::className(), BaseActiveRecord::EVENT_AFTER_FIND, function ($event)&#123; $model = $event-&gt;sender; $model-&gt;update_date = time_tran($model-&gt;update_date); $event-&gt;sender = $model; return $event; &#125;); 2.新建时间转换函数 1234567891011121314151617181920212223242526function time_tran($agoTime)&#123; $agoTime = strtotime($agoTime); $time = time() - $agoTime; if ($time &gt;= 31104000) &#123; // N年前 $num = (int)($time / 31104000); return $num.'年前'; &#125; if ($time &gt;= 2592000) &#123; // N月前 $num = (int)($time / 2592000); return $num.'月前'; &#125; if ($time &gt;= 86400) &#123; // N天前 $num = (int)($time / 86400); return $num.'天前'; &#125; if ($time &gt;= 3600) &#123; // N小时前 $num = (int)($time / 3600); return $num.'小时前'; &#125; if ($time &gt; 60) &#123; // N分钟前 $num = (int)($time / 60); return $num.'分钟前'; &#125; return '1分钟前';&#125; EVENT_BEFORE_VALIDATE该事件顾名思义，就是在model验证前事件。 该事件有一个很棒的特性，在触发该事件，当你的handler函数执行了一系列操作，这个时候如果你发现没有验证的必要的时候。可以手动修改$event-&gt;isVaild = false。 后续就不会再继续验证了。可以减少一些代码执行，提高效率。 自定义事件有许多场景可以使用到事件，比如我们在用户注册后，发送验证邮件。下面是事例代码： 12345678910111213141516171819202122232425262728293031323334&lt;?phpnamespace console\\controllers;use Yii;use yii\\console\\Controller;use yii\\base\\Component;class RegesiterController extends Controller&#123; public function actionTest() &#123; $core = new Core(); $user = new user(); $user-&gt;on('regesiter', [$core, 'verifyMail']); $student-&gt;regesiter(); &#125;&#125;class User extends Component&#123; public function regesiter() &#123; echo \"User regesited\\n\"; $this-&gt;trigger('regesiter'); &#125;&#125;class Core extends Component&#123; public function verifyMail() &#123; echo \"Core Send E-mail to User\\n\"; &#125;&#125;","categories":[{"name":"后端","slug":"backend","permalink":"https://war9.cn/categories/backend/"},{"name":"Yii2","slug":"backend/Yii2","permalink":"https://war9.cn/categories/backend/Yii2/"}],"tags":[{"name":"Yii2","slug":"Yii2","permalink":"https://war9.cn/tags/Yii2/"},{"name":"yii2-event","slug":"yii2-event","permalink":"https://war9.cn/tags/yii2-event/"},{"name":"yii2-事件","slug":"yii2-事件","permalink":"https://war9.cn/tags/yii2-事件/"}],"keywords":[{"name":"后端","slug":"backend","permalink":"https://war9.cn/categories/backend/"},{"name":"Yii2","slug":"backend/Yii2","permalink":"https://war9.cn/categories/backend/Yii2/"}]},{"title":"【算法】变量交换","slug":"algorithmExchange-variables","date":"2018-01-24T03:25:00.000Z","updated":"2018-01-24T06:18:40.652Z","comments":true,"path":"2018/01/24/algorithmExchange-variables.html","link":"","permalink":"https://war9.cn/2018/01/24/algorithmExchange-variables.html","excerpt":"","text":"我们常见的两变量交换会采用第三个变量。本文记录几个不使用临时变量交换方法。 list 简洁 不改变变量类型适用所有变量类型123456&lt;?php $a = \"你好\"; $b = \"世界\"; echo $a.$b;//输出 “你好世界” list($b,$a) = [$a,$b]; echo $a.$b;//输出 “世界你好” ^异或 适用于等长文本和int类型12345678910&lt;?php $a = 98; $b = 12; var_dump($a);//int(98) var_dump($b);//int(12) $a = $a^$b; $b = $b^$a; $a = $a^$b; var_dump($a);//int(12) var_dump($b);//int(98) 经过测试list方法和异或方法执行时间毫秒级暂时看不出区别。 但是内存方面list方法会比异或方法占用要多一点。 事实上，List的方法虽然简洁，但是内存开销比新建一个中间变量还要大。。 测试代码12345678910111213141516171819&lt;?php $a = 9899999; $b = 4546464; var_dump($a); var_dump($b); $t1 = microtime(true); $a = $a^$b; $b = $b^$a; $a = $a^$b; $t2 = microtime(true); echo '耗时'.($t2-$t1).'微秒&lt;br&gt;'; echo 'Now memory_get_usage: ' . memory_get_usage() . '&lt;br /&gt;'; var_dump($a); var_dump($b); /* int(9899999) int(4546464) 耗时1.9073486328125E-6微秒 Now memory_get_usage: 352232 int(4546464) int(9899999) */ 12345678910111213141516$a = 9899999;$b = 4546464;var_dump($a);var_dump($b);$t1 = microtime(true);list($b,$a) = [$a,$b];$t2 = microtime(true);echo '耗时'.($t2-$t1).'微秒&lt;br&gt;';echo 'Now memory_get_usage: ' . memory_get_usage() . '&lt;br /&gt;';var_dump($a);var_dump($b);/*int(9899999) int(4546464) 耗时1.9073486328125E-6微秒Now memory_get_usage: 352312int(4546464) int(9899999)*/","categories":[{"name":"PHP","slug":"php","permalink":"https://war9.cn/categories/php/"}],"tags":[{"name":"PHP","slug":"PHP","permalink":"https://war9.cn/tags/PHP/"},{"name":"算法","slug":"算法","permalink":"https://war9.cn/tags/算法/"}],"keywords":[{"name":"PHP","slug":"php","permalink":"https://war9.cn/categories/php/"}]},{"title":"Codeception（二）","slug":"Codeception-second","date":"2018-01-23T03:22:00.000Z","updated":"2018-02-02T03:57:59.421Z","comments":true,"path":"2018/01/23/Codeception-second.html","link":"","permalink":"https://war9.cn/2018/01/23/Codeception-second.html","excerpt":"","text":"前言上文介绍了如何安装部署Codeception，并进行了简单的单元测试。本文将从Codeception的目录结构讲起，了解目录结构，和配置文件。并具体讲解单元测试的相关内容。功能测试和验收测试将在后面的文章来写。 一些预备知识点击名称以访问断言概念断言概念及使用 Actors概念Actiors是Codeception的一个重要概念，用来表示测试一个人行为。我们有一个UnitTester来执行单元测试代码；我们还有一个FunctionalTester，负责功能测试，采用内部的知识来把应用程序当作一个整体来测试；还有一个AcceptanceTester，以用户方式通过我们提供的界面检查应用程序的工作。 Actor类不需要写，而是通过套件生成。 Actor类的方法都是通过Codeception模块生成的，每个模块为不同的测试目的提供预定义的动作，并且它们可以被组合以适应测试环境，Codeception尝试通过这些模块解决可能存在的90%的问题，所以你不必另起炉灶。我们认为你可以花更多的时间写测试和支撑代码以使得这些测试得以运行。默认情况下AcceptanceTester依赖于PhpBrowser模块，它们在tests/acceptance.suite.yml配置文件中[1]： 123456class_name: AcceptanceTestermodules: enabled: - PhpBrowser: url: http://localhost/myapp/ - HelperAcceptance 目录结构这里我们来了解一下codeception的目录结构。用于正确的使用Codeception 以上截图来自common目录。下面来贴一份干净的目录结构123456789101112131415161718192021222324common -&gt;tests --&gt;_data//存放测试数据 --&gt;_output//测试输出目录 --&gt;_support ---&gt;_generated//Build Task 自动生成 ----&gt;AcceptanceTesterActions.php ----&gt;FunctionalTesterActions.php ----&gt;UnitTesterActions.php ---&gt;Helper//定义用户行为 ----&gt;Acceptance.php ----&gt;Functional.php ----&gt;Unit.php --&gt;acceptance//验收测试存放目录 ---&gt;_bootstrap.php --&gt;functional//功能测试 ---&gt;_bootstrap.php --&gt;unit//单元测试 ---&gt;_bootstrap.php --&gt;_bootstrap.php --&gt;acceptance.suite.yml//验收测试配置 --&gt;functional.suite.yml//功能测试配置 --&gt;unit.suite.yml//单元测试配置 -&gt;codeception.yml data文件夹存放我们预先定义好的数据，在测试的时候可以使用这些数据。当然像我们上篇文章一样直接写到单元测试方法里是也可以的。放到该目录更符合规范，目录清晰. Helper文件夹存放我们测试时候需要用到的帮助类。 一般情况下，我们自己编写的单元测试文件将按照不同的测试存放到acceptance、functional、unit里面。 每个目录都有一个_bootstrap文件，在执行测试的时候会预先执行该文件内容。 对于Yii来说，_bootstrap文件用于载入yii框架及其配置。这样就不会出现找不到框架某类的情况了。方便我们调试基于框架的代码。 单元测试Codeception使用phpUnit作为运行其测试的后端。因此，任何phpUnit测试都可以添加到代码测试套件中，然后执行。如果你曾经写过phpUnit测试，那么就像以前一样编写即可。上文中我们通过1codecept g:test unit \\libraries\\\\DataHelper 创建了单元测试模板，模板的结果如下：1234567891011121314151617181920212223&lt;?phpclass DataHelper extends \\Codeception\\Test\\Unit&#123; /** * @var \\UnitTester */ protected $tester; protected function _before() &#123; &#125; protected function _after() &#123; &#125; // tests public function testMe() &#123; &#125;&#125; before和after方法用于在每次测试中创建一个测试对象，然后再销毁。分别对应PHPUnit里的setUp和tearDown。 而以test开头的方法是单元测试方法。 测试方法在测试中，我们可以使用断言进行单元测试。 比如$this-&gt;assertTrue(Condition); 而Codeception也使用expect封装了很多断言测试。 12345//except('错误时提示信息',condition条件)-&gt;期望结果方法expect('函数存在遗漏:', $result == $k)-&gt;true();//判断$result变量值和$k值是否相等。expect('ID is wrong', $user -&gt;ID)-&gt;contains('123');//判断$user-&gt;ID是否包含123 except提供的期望值判断方法全部方法存在于文件 1\\vendor\\codeception\\verify\\src\\Codeception\\Verify.php 下面列举出部分方法 equals 相等 contains 包含 greaterThan 大于 lessThan 小于 greaterOrEquals 大于等于 true 真 notNull 不为null isEmpty 是否是空 unit.suite.yml配置文件//TODO 1234modules: enabled: - Yii2: part: [email] 此模块启动yii应用程序的测试用例，并提供其他辅助方法来简化测试。它只有mail，以便排除功能测试中的其它方法。 通过访问测试用例中的$ this-&gt; tester类，可以使用yii2模块的方法 文章部分内容摘自以下链接，内容有删改：https://www.cloudxns.net/Support/detail/id/939.htmlhttp://www.kkh86.com/it/codeception/guide-create-project.htmlhttp://codeception.com/for/yii","categories":[{"name":"后端","slug":"backend","permalink":"https://war9.cn/categories/backend/"},{"name":"Yii2","slug":"backend/Yii2","permalink":"https://war9.cn/categories/backend/Yii2/"}],"tags":[{"name":"单元测试","slug":"单元测试","permalink":"https://war9.cn/tags/单元测试/"},{"name":"codeception","slug":"codeception","permalink":"https://war9.cn/tags/codeception/"},{"name":"PHPUnit","slug":"PHPUnit","permalink":"https://war9.cn/tags/PHPUnit/"},{"name":"Yii2","slug":"Yii2","permalink":"https://war9.cn/tags/Yii2/"}],"keywords":[{"name":"后端","slug":"backend","permalink":"https://war9.cn/categories/backend/"},{"name":"Yii2","slug":"backend/Yii2","permalink":"https://war9.cn/categories/backend/Yii2/"}]},{"title":"Codeception安装使用（一）","slug":"Codeception-first","date":"2018-01-22T05:50:00.000Z","updated":"2018-02-02T03:57:50.932Z","comments":true,"path":"2018/01/22/Codeception-first.html","link":"","permalink":"https://war9.cn/2018/01/22/Codeception-first.html","excerpt":"","text":"简介Codeception是PHP的现代全栈测试框架。 受BDD的启发，它为您提供了一种绝对新的编写验收、功能和单元测试的方式。 由PHPUnit提供支持。 尽管TDD（测试驱动开发）受到广泛普及，但一些PHP开发人员从来没有为他们的应用程序编写自动化测试，主要是因为他们认为它很难、慢或无聊。Codeception框架是为了实际测试而开发的。 它允许以单一、连贯的方式进行编写单元、功能、集成和验收测试。 它可以称为BDD（行为驱动开发）框架。 所有的Codeception测试都以描述性方式编写。 只要看着测试本体，您就可以清楚地了解正在测试的内容以及如何进行测试。 即使是具有许多断言的复杂测试也是用简单的PHP域特定语言（DSL）编写的。 Yii2下的Codeception单元测试 因为近期开发项目一直使用Yii2框架。因此本文将介绍Yii2下的codeception的使用。另外Codeception官方也提供了许多框架的文档。Yii2: http://codeception.com/for/yiiLaravel: http://codeception.com/for/laravelWordpress: http://codeception.com/for/wordpressSymfony: http://codeception.com/for/symfony 安装部署1composer require \"codeception/codeception\" --dev 我在安装的时候，发现Yii2已经集成了该插件，但是缺少”guzzlehttp/guzzle”依赖无法运行。于是我执行了。composer require guzzlehttp/guzzle 2018年1月23日 11:04:07更新一些遇到的坑： 运行时可能会遇到各种神奇的错误，这个时候一定要注意你的PHP版本。如果是PHP7版本，记的wget http://codeception.com/codecept.phar 。 不然你将遇到各种类找到等奇奇怪怪的错误…PHP5版本wget http://codeception.com/php5/codecept.phar 因为文章时效性，具体准确链接以官方网站为准。 在测试时，如果是高级模板(yii2-advanced-template)，单元测试将区分不同的目录，在backend、frontend、common分别会有一个test文件夹，用于单元测试。 如果测试后台应用，就切换到backend目录，运行codecept run。如果想测试所有，则在项目根目录运行codecept run。 初始化 1codecept bootstrap 配置数据库 在上面我们说过，yii2的单元测试是区分目录的，数据库配置也是单独的。 在config目录下，会有一个test.php和test-local.php存放单元测试的配置信息。 我们需要将backend、frontend、common目录下的config目录分别配置。其配置和main里的配置类似 在进行单元测试的时候，最好使用单独的测试数据库，以免在进行单元测试的时候，某些操作将数据库清空。 运行 1codecept run 默认是没有codecept命令的，需要配置一下。windows在环境变量Path里加入 D:\\Path\\to\\project\\vendor\\codeception\\base 通过模板创建测试 generate:cept suite filename - Generates a sample Cept scenario generate:cest suite filename - Generates a sample Cest test generate:test suite filename - Generates a sample PHPUnit Test with Codeception hooks generate:phpunit suite filename - Generates a classic PHPUnit Test generate:suite suite actor - Generates a new suite with the given Actor class name generate:scenarios suite - Generates text files containing scenarios from tests generate:helper filename - Generates a sample Helper File generate:pageobject suite filename - Generates a sample Page object generate:stepobject suite filename - Generates a sample Step object generate:environment env - Generates a sample Environment configuration generate:groupobject group - Generates a sample Group Extension PS：本来对这些英文进行了翻译，但是怕翻译不准确，这里还是看英文比较舒服。 对自己写的Helper函数进行测试 首先创建单元测试模板。 1codecept g:test unit \\libraries\\\\DataHelper 编写测试方法 123456789101112131415public function testRemoveSpace() &#123; $arr = [ '半角空格'=&gt;['123'=&gt;' 123 ','你好'=&gt;' 你好 '], '全角空格'=&gt;['１２３'=&gt;' １２３ ','你好'=&gt;' 你好 '], 'Tab空格' =&gt;['123'=&gt;\"\\t123\\t\",'你好'=&gt;\"\\t你好\\t\"], '混合空格'=&gt;['你好,123'=&gt;\"\\t 你好,123\\t \"], ]; foreach ($arr as $key =&gt; $list)&#123; foreach ($list as $k =&gt; $value)&#123; $result = DataHelper::removeSpace($value); expect('函数存在遗漏:'.$key, $result == $k)-&gt;true(); &#125; &#125; &#125; 进行单元测试 1codecept run 说明函数没有问题。我们来将函数故意写错，看一下是否可以报错。我们故意在半角空格处写错，发现可以报错。","categories":[{"name":"后端","slug":"backend","permalink":"https://war9.cn/categories/backend/"},{"name":"Yii2","slug":"backend/Yii2","permalink":"https://war9.cn/categories/backend/Yii2/"}],"tags":[{"name":"单元测试","slug":"单元测试","permalink":"https://war9.cn/tags/单元测试/"},{"name":"codeception","slug":"codeception","permalink":"https://war9.cn/tags/codeception/"},{"name":"PHPUnit","slug":"PHPUnit","permalink":"https://war9.cn/tags/PHPUnit/"},{"name":"Yii2","slug":"Yii2","permalink":"https://war9.cn/tags/Yii2/"}],"keywords":[{"name":"后端","slug":"backend","permalink":"https://war9.cn/categories/backend/"},{"name":"Yii2","slug":"backend/Yii2","permalink":"https://war9.cn/categories/backend/Yii2/"}]},{"title":"Yii2-Editable插件【GridView编辑】","slug":"Yii2-Editable插件","date":"2018-01-16T08:46:00.000Z","updated":"2018-01-16T09:50:55.995Z","comments":true,"path":"2018/01/16/Yii2-Editable插件.html","link":"","permalink":"https://war9.cn/2018/01/16/Yii2-Editable插件.html","excerpt":"","text":"项目过程中遇到一个这样的需求，想要在表格页面（GridView所在页）直接修改数据。在yiiframework.com进行一番探索，发现了yii2-editable插件。通过github搜索发现了N款yii2-editable插件。我们挑选综合排名前三个进行试用。 1.kartik-v/yii2-editable 项目github地址：https://github.com/kartik-v/yii2-editable 项目文档地址：http://demos.krajee.com/editable 开源协议：BSD-3-Clause license 优点 Star最多 国内有教程介绍该插件（讲解不细） 文档，演示比较完善 有两种样式，【按钮式，Link式】点击修改数据 数据形式多样【DatePicker、textarea、select等等】 缺点 依赖于其它项目：如果要在GridView上使用该插件，需安装kartik-v/yii2-grid。或者使用123'value'=&gt;function($model)&#123; return \\kartik\\editable\\Editable::widget([]);&#125; 的形式。这种形式需要改写controller，要写的内容较多。 保存按钮很怪。保存按钮是一个下载图标。。 具体使用介绍后续完善。//TODO 2.yii2mod/yii2-editable 项目github地址：https://github.com/yii2mod/yii2-editable 项目文档地址：https://github.com/yii2mod/yii2-editable#yii2-editable-widget 开源协议：MIT license 优点 简单易用，使用简单方便1.在view层GirdView里需要的字段改写成如下代码。 12345[ 'class'=&gt;EditableColumn::class,//Editable字段类 'attribute' =&gt; 'name',//字段名称 'url' =&gt; ['change-name'],//路由参数], 2.在Controller里actions方法里加入如下代码： 12345$actions=parent::actions();$actions['change-name']=[ 'class' =&gt; EditableAction::class,//EditableAction类 'modelClass' =&gt; User::class,//数据model类 ]; 缺点 没完善的文档 3.2amigos/yii2-editable-widget 项目github地址：https://github.com/2amigos/yii2-editable-widget 项目文档地址：https://github.com/2amigos/yii2-editable-widget#x-editable-widget-for-yii2 开源协议：The BSD License (BSD). 优点 作者是团队 良好的单元测试提供 数据形式多样 缺点 没完善的文档 总结以上三款插件除官方推荐插件kartik-v/yii2-editable外，其余两个插件都是基于x-editable外部Jquery组件制作的。 因此kartik-v/yii2-editable的文档比较完善(PS.稍微有点乱，也可能是我看到一片一片的英文产生的感觉。。) 而其它两个插件的文档只能通过阅读X-Editable文档进行更多定制。 不过可以根据项目大小选择适合的项目 如果项目不是很大，这样的需求较弱，建议使用yii2mod/yii2-editable插件，因为其小巧精致，使用简单。如果项目已经完成，再改写起来，使用该插件较为方便。并且可以很方便的在GridView上改写使用。 如果该需求较强，建议使用kartik-v和2amigos的项目。这俩项目在单独的插件形式使用上，功能比较多。 这三款插件都是Yii2插件常见的贡献者。尤其是kartik-v和2amigos团队。感谢他们对Yii2作出的贡献。","categories":[{"name":"后端","slug":"backend","permalink":"https://war9.cn/categories/backend/"},{"name":"Yii2","slug":"backend/Yii2","permalink":"https://war9.cn/categories/backend/Yii2/"}],"tags":[{"name":"Yii2","slug":"Yii2","permalink":"https://war9.cn/tags/Yii2/"},{"name":"yii2-editable","slug":"yii2-editable","permalink":"https://war9.cn/tags/yii2-editable/"}],"keywords":[{"name":"后端","slug":"backend","permalink":"https://war9.cn/categories/backend/"},{"name":"Yii2","slug":"backend/Yii2","permalink":"https://war9.cn/categories/backend/Yii2/"}]},{"title":"PHP反射机制","slug":"PHPReflection","date":"2018-01-15T02:38:00.000Z","updated":"2018-01-15T04:56:20.327Z","comments":true,"path":"2018/01/15/PHPReflection.html","link":"","permalink":"https://war9.cn/2018/01/15/PHPReflection.html","excerpt":"","text":"简介在PHP5以后，加入了一个反射（Reflection）类，使用此类可以方便的获取某类的属性、常量、方法等。基本涵盖了想要获取类的所有信息。也可以扩展自身类，为使用类的人提供更多信息，而不必阅读源代码。 可以使用的场景非常多，比如自动生成文档，自动化插件等。 常用方法 获取常量列表 获取方法列表 获取属性列表 由于使用比较简单，其它请参考官方文档。完整的方法列表请点击查看 我们定义一个学生类，代码如下：12345678910111213141516171819202122232425262728&lt;?phpclass Student&#123;const SCHOOL = 'BeiJing Primary School';const OBLIGATORY_COURSE = 'CHINESE';public $name;public $sex;public $id; public function getName()&#123; return $this-&gt;name; &#125; public function getSex()&#123; return $this-&gt;sex; &#125; public function getId()&#123; return $this-&gt;id; &#125; public function setName($name)&#123; $this-&gt;name = $name; &#125; public function setSex($sex)&#123; $this-&gt;sex = $sex; &#125; public function setId($id)&#123; $this-&gt;id = $id; &#125;&#125;?&gt; 首先new一个反射类，里面参数写上你想获取类的类名。12$objectClass = new \\ReflectionClass('Student');//$objectClass-&gt;[方法] 获取常量列表 =&gt; public array getConstants ( void ) 12$constArray = $objectClass-&gt;getConstants();var_dump($constArray); 将打印如下结果: 123456array(2) &#123;[\"SCHOOL\"]=&gt;string(22) \"BeiJing Primary School\"[\"OBLIGATORY_COURSE\"]=&gt;string(7) \"CHINESE\"&#125; 获取方法列表 =&gt; public array ReflectionClass::getMethods ([ int $filter ] )参数filter，对方法列表进行过滤，默认不过滤。可使用提供的常量进行过滤 ReflectionMethod::IS_STATIC ReflectionMethod::IS_PUBLIC ReflectionMethod::IS_PROTECTED ReflectionMethod::IS_PRIVATE ReflectionMethod::IS_ABSTRACT ReflectionMethod::IS_FINAL12$methodArray = $objectClass-&gt;getMethods();var_dump($methodArray); 将打印如下结果: 1234567891011121314151617181920212223242526272829303132333435363738394041424344 array(6) &#123; [0]=&gt; object(ReflectionMethod)#2 (2) &#123; [\"name\"]=&gt; string(7) \"getName\" [\"class\"]=&gt; string(7) \"Student\" &#125; [1]=&gt; object(ReflectionMethod)#3 (2) &#123; [\"name\"]=&gt; string(6) \"getSex\" [\"class\"]=&gt; string(7) \"Student\" &#125; [2]=&gt; object(ReflectionMethod)#4 (2) &#123; [\"name\"]=&gt; string(5) \"getId\" [\"class\"]=&gt; string(7) \"Student\" &#125; [3]=&gt; object(ReflectionMethod)#5 (2) &#123; [\"name\"]=&gt; string(7) \"setName\" [\"class\"]=&gt; string(7) \"Student\" &#125; [4]=&gt; object(ReflectionMethod)#6 (2) &#123; [\"name\"]=&gt; string(6) \"setSex\" [\"class\"]=&gt; string(7) \"Student\" &#125; [5]=&gt; object(ReflectionMethod)#7 (2) &#123; [\"name\"]=&gt; string(5) \"setId\" [\"class\"]=&gt; string(7) \"Student\" &#125;&#125; 获取属性列表 =&gt; public array ReflectionClass::getProperties ([ int $filter ] ) 参数filter用于过滤结果，可用常量如下： ReflectionProperty::IS_STATIC指示了 static 的属性。 ReflectionProperty::IS_PUBLIC指示了 public 的属性。 ReflectionProperty::IS_PROTECTED指示了 protected 的属性。 ReflectionProperty::IS_PRIVATE指示了 private 的属性。 12$propertyArray = $objectClass-&gt;getProperties();var_dump($propertyArray); 将打印如下结果: 1234567891011121314151617181920212223array(3) &#123; [0]=&gt; object(ReflectionProperty)#2 (2) &#123; [\"name\"]=&gt; string(4) \"name\" [\"class\"]=&gt; string(7) \"Student\" &#125; [1]=&gt; object(ReflectionProperty)#3 (2) &#123; [\"name\"]=&gt; string(3) \"sex\" [\"class\"]=&gt; string(7) \"Student\" &#125; [2]=&gt; object(ReflectionProperty)#4 (2) &#123; [\"name\"]=&gt; string(2) \"id\" [\"class\"]=&gt; string(7) \"Student\" &#125;&#125;","categories":[{"name":"PHP","slug":"php","permalink":"https://war9.cn/categories/php/"}],"tags":[{"name":"PHP","slug":"PHP","permalink":"https://war9.cn/tags/PHP/"}],"keywords":[{"name":"PHP","slug":"php","permalink":"https://war9.cn/categories/php/"}]},{"title":"Yii2 Event事件-初识","slug":"Yii2-Event事件-初识","date":"2018-01-09T09:33:00.000Z","updated":"2018-01-24T08:05:10.894Z","comments":true,"path":"2018/01/09/Yii2-Event事件-初识.html","link":"","permalink":"https://war9.cn/2018/01/09/Yii2-Event事件-初识.html","excerpt":"","text":"yii2-事件 系列 第一篇 博主使用yii2时间不长,用于备忘分享，若有不正之处欢迎指正。十分感谢。本文仅用于快速使用yii2事件。后续文章将详细介绍yii2事件的更多细节。 前言最近在使用框架做项目中，多次使用到了Behavior。但是在使用的时候，切记不要盲目使用behavior，而是要区分场景。明白了场景到底需要什么的时候，再去选择使用事件(event)，还是行为(behavior)。 使用事件，可以在特定的时点，触发执行预先设定的一段代码，事件既是代码解耦的一种方式，也是设计业务流程的一种模式。现代软件中，事件无处不在，比如，你发了个微博，触发了一个事件，导致关注你的人，看到了你新发出来的内容。对于事件而言，有这么几个要素 [1]： yii2事件方法Event文件( \\yii\\base\\Event )函数模型：12345678910111213141516171819202122232425262728293031323334class Event extends Object&#123; public $name; // 事件名 public $sender; // 事件发布者，通常是调用了 trigger() 的对象或类。 public $handled = false; // 是否终止事件的后续处理 public $data; // 事件相关数据 private static $_events = []; public static function on($class, $name, $handler, $data = null, $append = true) &#123; // ... ... // 用于绑定事件handler &#125; public static function off($class, $name, $handler = null) &#123; // ... ... // 用于取消事件handler绑定 &#125; public static function hasHandlers($class, $name) &#123; // ... ... // 用于判断是否有相应的handler与事件对应 &#125; public static function trigger($class, $name, $event = null) &#123; // ... ... // 用于触发事件 &#125;&#125; on =&gt;绑定事件handler 一个最简单的绑定: 123456789&lt;?php\\yii\\base\\Event::on( BaseActiveRecord::className(),//需要绑定的类名 BaseActiveRecord::EVENT_BEFORE_INSERT,//绑定插入前事件 function ($event)&#123;//事件handler。这里的$event即是上面类中的Event。 echo 'I will insert a record into database'; //... &#125;); 以上例子表示将AR数据库插入之前事件，与自定义handler函数绑定。 off =&gt;解绑事件handler 一个最简单的解除绑定： 123456&lt;?php\\yii\\base\\Event::off( BaseActiveRecord::className(),//要接触绑定的类名 BaseActiveRecord::EVENT_AFTER_DELETE,//解除绑定的事件 //如果不写第三个参数，默认为null，将移除事件所有的handler。); 以上例子表示移除AR数据被删除后事件绑定的所有的handler.该函数将返回True或False表示是否找到并移除了该handler。 hasHandlers =&gt;判断这个类以及其父类的指定事件是否具有handler。 一个最简单的判断： 12345&lt;?php\\yii\\base\\Event::hasHandlers( BaseActiveRecord::className(),//要判断的类 BaseActiveRecord::EVENT_BEFORE_UPDATE//要判断的事件名称); 以上例子表示 判断AR类数据库记录变更行为下有没有handler。 注：仔细阅读了源码后，发现该函数不仅会检查指定的这个类，也会检查其所有的父类。 offAll =&gt;解除所有类级别的事件处理程序。 一个最简单的解除所有绑定： 12&lt;?php\\yii\\base\\Event::offAll(); Yii2 内置事件 在上面我们明白了如何绑定解绑事件，Yii2也很贴心的给我们提供了许多内置的事件，在这里列举一下，以用于快速查询。Tips:此内容可以在Yii2速查表里找到。 Application # 应用主体 应用处理请求before之前触发 Application::EVENT_BEFORE_REQUEST 应用处理请求before之后触发 Application::EVENT_AFTER_REQUEST Controller # 控制器 在每个Action运行之前触发 Controller::EVENT_BEFORE_ACTION 在每个Action运行之后触发 Controller::EVENT_AFTER_ACTION Model # 模型 在验证Model属性之前触发 Model::EVENT_BEFORE_VALIDATE 在验证Model属性之后触发 Model::EVENT_AFTER_VALIDATE Module # 模块 一个模块的Action运行前触发 Module::EVENT_BEFORE_ACTION 一个模块的Action运行后触发 Module::EVENT_AFTER_ACTION View # 视图 执行视图的beforePage时触发 View::EVENT_BEGIN_PAGE 执行视图的endPage函数时触发 View::EVENT_END_PAGE 在renderFile渲染一个视图文件之前触发 View::EVENT_BEFORE_RENDER 在renderFile渲染一个视图文件之后触发 View::EVENT_AFTER_RENDER 执行视图的beginBody函数时触发 View::EVENT_BEGIN_BODY 执行视图的endBody函数时触发 View::EVENT_END_BODY Widget # 挂件 Widget初始化时触发 Widget::EVENT_INIT Widget执行前触发 Widget::EVENT_BEFORE_RUN Widget执行之后触发 Widget::EVENT_AFTER_RUN ActiveQuery 由ActiveQuery的init函数触发 ActiveQuery::EVENT_INIT BaseActiveRecord &amp; ActiveRecord # 这也许是内置事件中最重要的一批了。 AR对象被初始化init时触发 BaseActiveRecord::EVENT_INIT AR执行查询结束时触发 BaseActiveRecord::EVENT_AFTER_FIND 插入结束时触发 BaseActiveRecord::EVENT_BEFORE_INSERT 插入之后触发 BaseActiveRecord::EVENT_AFTER_INSERT 更新记录之前触发 BaseActiveRecord::EVENT_BEFORE_UPDATE 更新记录之后触发 BaseActiveRecord::EVENT_AFTER_UPDATE 删除记录之前触发 BaseActiveRecord::EVENT_BEFORE_DELETE 删除记录之后触发 BaseActiveRecord::EVENT_AFTER_DELETE 在数据refresh成功之后触发 BaseActiveRecord::EVENT_AFTER_REFRESH Connection # 数据库连接 数据库连接被打开后触发 Connection::EVENT_AFTER_OPEN 事务被启动时触发 Connection::EVENT_BEGIN_TRANSACTION 事务被提交后触发 Connection::EVENT_COMMIT_TRANSACTION 事务回滚后触发 Connection::EVENT_ROLLBACK_TRANSACTION Response # Http响应 Response响应发送之前触发 Response::EVENT_BEFORE_SEND Response响应发送之后触发 Response::EVENT_AFTER_SEND Response响应内容准备好之后触发 Response::EVENT_AFTER_PREPARE User # 会员登陆授权 登陆之前触发 User::EVENT_BEFORE_LOGIN 登陆之后触发 User::EVENT_AFTER_LOGIN 注销之前触发 User::EVENT_BEFORE_LOGOUT 注销之后触发 User::EVENT_AFTER_LOGOUT 一些使用技巧使用事件不仅可以写到controller里面，实现这些用户注册成功触发SayHelloToUser事件这个场景。 也可以写到BootStrap文件中，实现一些比如全局安全检测，日志等功能。另外也可以写到配置文件中。下面简单介绍一下配置文件实现绑定事件handler的流程。 下面贴一个用户登录事件绑定的实现，代码实现了登录后修改最后登录时间。config/main.php 1234567891011'components' =&gt; [ 'user' =&gt; [ 'identityClass' =&gt; 'common\\models\\User', 'enableAutoLogin' =&gt; true, 'on afterLogin' =&gt; function($event)&#123; $user = $event-&gt;identity; $user-&gt;loginTime = time(); $user-&gt;save(); &#125; ],] 上面就是在配置文件中绑定事件handler的基本形式。大体模型如下：12345678'components' =&gt; [ '自定义component'=&gt;[ 'class'=&gt;'\\path\\自定义', 'on Event名称'=&gt; function($event)&#123; //handler内容 &#125; ],], 一些其它需要留意的地方 事件是在Component引入的，yii\\base\\Object是不支持事件的。使用时要从yii\\base\\Component进行继承 Handler的形式必须是函数形式的。 文中部分内容引用自：[1]深入理解Yii2.0-事件","categories":[{"name":"后端","slug":"backend","permalink":"https://war9.cn/categories/backend/"},{"name":"Yii2","slug":"backend/Yii2","permalink":"https://war9.cn/categories/backend/Yii2/"}],"tags":[{"name":"Yii2","slug":"Yii2","permalink":"https://war9.cn/tags/Yii2/"},{"name":"yii2-event","slug":"yii2-event","permalink":"https://war9.cn/tags/yii2-event/"},{"name":"yii2事件","slug":"yii2事件","permalink":"https://war9.cn/tags/yii2事件/"}],"keywords":[{"name":"后端","slug":"backend","permalink":"https://war9.cn/categories/backend/"},{"name":"Yii2","slug":"backend/Yii2","permalink":"https://war9.cn/categories/backend/Yii2/"}]},{"title":"Yii2 资源大全","slug":"Yii2-resources","date":"2018-01-08T07:15:00.000Z","updated":"2018-01-10T03:47:20.862Z","comments":true,"path":"2018/01/08/Yii2-resources.html","link":"","permalink":"https://war9.cn/2018/01/08/Yii2-resources.html","excerpt":"","text":"Yii2资源大全 本文将记录一些常用的Yii2 资源，比如教程，好的开源项目，工具等.另外一个好的项目 awesome-yii本文将不断更新,如有更好的资源，欢迎提出意见！ 工具 Yii2 速查表 学习笔记 Yii2 初学者笔记 工具 Yii2 速查表 Link:http://nai8.me/tool-sc.html Description: 可以快速查询以下知识： Composer DAO Logging Validator String Session&amp;Cookie Request Response Controller ActiveForm FileHelper UploadedFile Html Alias Query Builder Migrate Asset Management Event Route&amp;UrlManager RESTful 学习笔记 Yii2 初学者笔记Link:http://blog.csdn.net/qq704005406/article/details/78075396Description:这是我之前的博客写的日志，在初学Yii2的时候记的笔记，里面内容可能不严谨，适用于快速上手Yii2.","categories":[{"name":"后端","slug":"backend","permalink":"https://war9.cn/categories/backend/"},{"name":"Yii2","slug":"backend/Yii2","permalink":"https://war9.cn/categories/backend/Yii2/"}],"tags":[{"name":"Yii2","slug":"Yii2","permalink":"https://war9.cn/tags/Yii2/"},{"name":"Yii2教程","slug":"Yii2教程","permalink":"https://war9.cn/tags/Yii2教程/"},{"name":"Yii2工具","slug":"Yii2工具","permalink":"https://war9.cn/tags/Yii2工具/"},{"name":"学习资料","slug":"学习资料","permalink":"https://war9.cn/tags/学习资料/"}],"keywords":[{"name":"后端","slug":"backend","permalink":"https://war9.cn/categories/backend/"},{"name":"Yii2","slug":"backend/Yii2","permalink":"https://war9.cn/categories/backend/Yii2/"}]},{"title":"【[转]PHP资源大全】Awesome PHP 项目","slug":"awesomePHP","date":"2018-01-03T08:54:00.000Z","updated":"2018-01-08T08:06:05.955Z","comments":true,"path":"2018/01/03/awesomePHP.html","link":"","permalink":"https://war9.cn/2018/01/03/awesomePHP.html","excerpt":"","text":"项目地址:https://github.com/ziadoz/awesome-php Awesome PHPA curated list of amazingly awesome PHP libraries, resources and shiny things. Contributing and CollaboratingPlease see CONTRIBUTING, CODE-OF-CONDUCT and COLLABORATING for details. Table of Contents Awesome PHP Composer Packeg仓库 依赖关系管理 额外的依赖关系管理 框架 额外的框架 组件 微型框架 额外的微型框架 路由 模板 静态站点生成 HTTP 中间件 URL Email Files Streams 依赖注入 Imagery 测试 持续集成 Documentation 安全 密码学 代码分析 代码质量 静态分析 Architectural 调试性能分析 构建工具 Task Runners 导航 资源管理 地理位置 日期时间 事件 日志 电子商务 PDF Office Database 数据库迁移 NoSQL Queue队列 Search 命令行 身份验证和授权 Markup Strings Numbers 过滤和验证 API 缓存 数据结构和存储 通知 部署 国际化和本地化 第三方API 扩展 杂项 软件资源 PHP安装 开发环境 虚拟机 文本编辑器和IDE Web应用 Infrastructure Resources PHP站点 其它站点 PHP 书籍 PHP 视频 PHP 博客 PHP 阅读 PHP 内部阅读 贡献名单 Composer RepositoriesComposer Repositories. Firegento - Magento Module Composer Repository. Packagist - The PHP Package Repository. PaketHub - All-in-One PHP Package Repository. Private Packagist - Composer package archive as a service for PHP. WordPress Packagist - Manage your plugins with Composer. Zend Framework Packages - Zend Framework Composer Repository. Dependency ManagementLibraries for dependency and package management. Composer Installers - A multi framework Composer library installer. Composer - A package and dependency manager. Melody - A tool to build one file Composer scripts. Pickle - A PHP extension installer. Dependency Management ExtrasExtras related to dependency management. Composed - A library to parse your project’s Composer environment at runtime. Composer Checker - A tool to validate Composer configurations. Composer Merge Plugin - A composer plugin to merge several composer.json files. Composition - A library to check your Composer environment at runtime. NameSpacer - A library to convert from underscores to namespaces. Patch Installer - A library to install patches using Composer. Prestissimo - A composer plugin which enables parallel install process. Satis - A static Composer repository generator. tooly - A library to manage PHAR files in project using Composer. Toran Proxy - A static Composer repository and proxy. FrameworksWeb development frameworks. Aura Framework - A framework built from independent components. CakePHP - A rapid application development framework (CP). Laravel 5 - Another PHP framework (L5). Nette - Another framework comprised of individual components. Phalcon - A framework implemented as a C extension. PPI Framework 2 - An interoperability framework. Symfony - A framework comprised of individual components (SF). Yii2 - Another PHP framework. Zend Framework 2 - Another framework comprised of individual components (ZF2). Ice - Another simple and fast PHP framework delivered as C-extension. Framework ExtrasExtras related to web development frameworks. CakePHP CRUD - A Rapid Application Development (RAD) plugin for CakePHP. Knp RAD Components - A set of Rapid Application Development (RAD) components for Symfony. Symfony CMF - A Content Management Framework to create custom CMS. ComponentsStandalone components from web development frameworks and development groups. Aura - Independent components, fully decoupled from each other and from any framework. CakePHP Plugins - A directory of CakePHP plugins. Hoa Project - Another package of PHP components. League of Extraordinary Packages - A PHP package development group. Symfony Components - The components that make Symfony. Zend Framework 2 Components - The components that make Zend Framework. Micro FrameworksMicro frameworks and routers. Bullet PHP - A micro framework for building REST APIs. Lumen - A micro-framework by Laravel. Proton - A StackPHP compatible micro framework. Radar - An Action-Domain-Responder implementation for PHP. Silex - A micro framework built around Symfony components. Slim - Another simple micro framework. Micro Framework ExtrasExtras related to micro frameworks and routers. Silex Skeleton - A project skeleton for Silex. Silex Web Profiler - A web debug toolbar for Silex. Slim Skeleton - A skeleton for Slim. Slim View - A collection of custom views for Slim. RoutersLibraries for handling application routing. Aura.Router - A full-featured routing library. Fast Route - A fast routing library. Klein - A flexible router. Pux - Another fast routing library. Route - A routing library built on top of Fast Route. TemplatingLibraries and tools for templating and lexing. Aura.View - Provides TemplateView and TwoStepView using PHP as the tempting language, with support for partials, sections, and helpers. Foil - Another native PHP templating library. Lex - A lightweight template parser. MtHaml - A PHP implementation of the HAML template language. Mustache - A PHP implementation of the Mustache template language. Phly Mustache - Another PHP implementation of the Mustache template language. PHPTAL - A PHP implementation of the TAL templating language. Plates - A native PHP templating library. Smarty - A template engine to complement PHP. Twig - A comprehensive templating language. Tale Jade - A PHP implementation of the Jade template language. Static Site GeneratorsTools for pre-processing content to generate web pages. Couscous - Couscous turns Markdown documentation into beautiful websites. It’s GitHub Pages on steroids. Phrozn - Another tool that converts Textile, Markdown and Twig into HTML. Sculpin - A tool that converts Markdown and Twig into static HTML. Spress - An extensible tool that converts Markdown and Twig into HTML. HTTPLibraries for working with HTTP. Buzz - Another HTTP client. Guzzle - A comprehensive HTTP client. HTTPFul - A chainable HTTP client. HTTPlug - An HTTP client abstraction without binding to a specific implementation. PHP VCR - A library for recording and replaying HTTP requests. Requests - A simple HTTP library. Retrofit - A library to ease creation of REST API clients. zend-diactoros - PSR-7 HTTP Message implementation. ScrapingLibraries for scraping websites. Embed - An information extractor from any web service or page. Goutte - A simple web scraper. PHP Spider - A configurable and extensible PHP web spider. MiddlewaresLibraries for building application using middlewares. Expressive - PSR-7 Middleware framework from Zend. PSR7-Middlewares - Inspiring collection of handy middlewares. Relay - A PHP 5.5 PSR-7 middleware dispatcher. Stack - A library of stackable middleware for Silex/Symfony. zend-stratigility - Middleware for PHP built on top of PSR-7. URLLibraries for parsing URLs. PHP Domain Parser - A domain suffix parser library. Purl - A URL manipulation library. sabre/uri - A functional URI manipulation library. Uri - Another URL manipulation library. EmailLibraries for sending and parsing email. CssToInlineStyles - A library to inline CSS in email templates. Email Reply Parser - An email reply parser library. Email Validator - A small email address validation library. Fetch - An IMAP library. Mautic - Email marketing automation PHPMailer - Another mailer solution. Stampie - A library for email services such as SendGrid, PostMark, MailGun and Mandrill. SwiftMailer - A mailer solution. FilesLibraries for file manipulation and MIME type detection. Apache MIME Types - A library that parses Apache MIME types. Canal - A library to determine internet media types. CSV - A CSV data manipulation library. Ferret - A MIME detection library. Flysystem - Another filesystem abstraction layer. Gaufrette - A filesystem abstraction layer. Hoa Mime - Another MIME detection library. Lurker - A resource tracking library. PHP FFmpeg - A wrapper for the FFmpeg video library. UnifiedArchive - A unified reader and writer of compressed archives. StreamsLibraries for working with streams. Streamer - A simple object-orientated stream wrapper library. Dependency InjectionLibraries that implement the dependency injection design pattern. Aura.Di - A serializable dependency injection container with constructor and setter injection, interface and trait awareness, configuration inheritance, and much more. Acclimate - A common interface to dependency injection containers and service locators. Auryn - A recursive dependency injector. Container - Another flexible dependency injection container. Disco - A PSR-11 compatible, annotation-based dependency injection container. PHP-DI - A dependency injection container that supports autowiring. Pimple - A tiny dependency injection container. Symfony DI - A dependency injection container component (SF). ImageryLibraries for manipulating images. Color Extractor - A library for extracting colours from images. GIF Creator - A library to create GIF animations from multiple images. GIF Frame Extractor - A library to extract GIF animation frame information. Glide - An on-demand image manipulation library. Image Hash - A library for generating perceptual image hashes. Image Optimizer - A library for optimizing images. Image With Text - A library for embedding text into images. Imagine - An image manipulation library. Intervention Image - Another image manipulation library. PHP Image Workshop - Another image manipulation library. TestingLibraries for testing codebases and generating test data. Alice - An expressive fixture generation library. AspectMock - A mocking framework for PHPUnit/Codeception. Atoum - A simple testing library. Behat - A behaviour driven development (BDD) testing framework. Codeception - A full stack testing framework. DBUnit - A database testing library for PHPUnit. Faker - A fake data generator library. HTTP Mock - A library for mocking HTTP requests in unit tests. Kahlan - Full stack Unit/BDD testing framework with built-in stub, mock and code-coverage support. Mink - Web acceptance testing. Mockery - A mock object library for testing. ParaTest - A parallel testing library for PHPUnit. Peridot - An event driven test framework. Phake - Another mock object library for testing. Pho - Another behaviour driven development testing framework. PHP-Mock - A mock library for built-in PHP functions (e.g. time()). PHPSpec - A design by specification unit testing library. PHPT - A test tool used by PHP itself. PHPUnit - A unit testing framework. Prophecy - A highly opinionated mocking framework. Samsui - Another fake data generator library. VFS Stream - A virtual filesystem stream wrapper for testing. VFS - Another virtual filesystem for testing. Continuous IntegrationLibraries and applications for continuous integration. CircleCI - A continuous integration platform. GitlabCi - Let GitLab CI test, build, deploy your code. TravisCi like. Jenkins - A continous integration platform with PHP support. JoliCi - A continuous integration client written in PHP and powered by Docker. PHPCI - An open source continuous integration platform for PHP. SemaphoreCI - A continuous integration platform for open source and private projects. Shippable - A docker based continious integration platform for open source and private projects. Sismo - A continuous testing server library. Travis CI - A continuous integration platform. Wercker - A continuous integration platform DocumentationLibraries for generating project documentation. APIGen - Another API documentation generator. daux.io - A documentation generator which uses Markdown files. PHP Documentor 2 - A documentation generator. phpDox - A documentation generator for PHP projects (that is not limited to API documentation). Sami - An API documentation generator. SecurityLibraries for generating secure random numbers, encrypting data and scanning for vulnerabilities. Halite - A simple library for encryption using libsodium. HTML Purifier - A standards compliant HTML filter. IniScan - A tool that scans PHP INI files for security. Optimus - Id obfuscation based on Knuth’s multiplicative hashing method. PHP Encryption - Secure PHP Encryption Library. PHP IDS - A structured PHP security layer. PHP SSH - An experimental object orientated SSH wrapper library. PHPSecLib - A pure PHP secure communications library. random_compat - PHP 5.x support for random_bytes() and random_int() RandomLib - A library for generating random numbers and strings. SecurityMultiTool - A PHP security library. SensioLabs Security Check - A web tool to check your Composer dependencies for security advisories. TCrypto - A simple encrypted key-value storage library. VAddy - A continuous security testing platform for web applications. Zed - An integrated penetration testing tool for web applications. PasswordsLibraries and tools for working with and storing passwords. GenPhrase - A library for generating secure random passphrases. Password Compat - A compatibility library for the new PHP 5.5 password functions. Password Policy - A password policy library for PHP and JavaScript. Password Validator - A library for validating and upgrading password hashes. Password-Generator - PHP library to generate random passwords. PHP Password Lib - A library for generating and validating passwords. phpass - A portable password hashing framework. Zxcvbn PHP - A realistic PHP password strength estimate library based on Zxcvbn JS. Code AnalysisLibraries and tools for analysing, parsing and manipulating codebases. Better Reflection - AST-based reflection library that allows analysis and manipulation of code Code Climate - An automated code review. PHP Parser - A PHP parser written in PHP. PHP Semantic Versioning Checker - A command line utility that compares two source sets and determines the appropriate semantic versioning to apply. PHPLOC - A tool for quickly measuring the size of a PHP project. PHPQA - A tool for running QA tools (phploc, phpcpd, phpcs, pdepend, phpmd, phpmetrics). Qafoo Quality Analyzer - A tool to visualize metrics and source code. Scrutinizer - A web tool to scrutinise PHP code. UBench - A simple micro benchmark library. Code QualityLibraries for managing code quality, formatting and linting. PHP CodeSniffer - A library that detects PHP, CSS and JS coding standard violations. PHP CS Fixer - A coding standards fixer library. PHP Mess Detector - A library that scans code for bugs, sub-optimal code, unused parameters and more. PHPCheckstyle - A tool to help adhere to certain coding conventions. PHPCPD - A library that detects copied and pasted code. Static AnalysisLibraries for performing static analysis of PHP code. Exakat - A static analysis engine for PHP. Mondrian - A code analysis tool using Graph Theory. phan - A static analyzer based on PHP 7+ and the php-ast extension. PHPCompatibility - A PHP compatibility checker for PHP CodeSniffer. PhpDependencyAnalysis - A tool to create customisable dependency graphs. PHP Metrics - A static metric library. PHP Migration - A static analyzer for PHP version migration. PHPStan - A PHP Static Analysis Tool. Pslam - A static analysis tool for finding errors in PHP applications. ArchitecturalLibraries related to design patterns, programming approaches and ways to organize code. Compose - A function composition library. Design Patterns PHP - A repository of software patterns implemented in PHP. Finite - A simple PHP finite state machine. Functional PHP - A functional programming library. Galapagos - Evolutionary language transformation. Iter - A library that provides iteration primitives using generators. Monad PHP - A simple Monad library. Patchwork - A library for redefining userland functions. PHP Option - An option type library. Pipeline - A pipeline pattern implementation. Ruler - A simple stateless production rules engine. RulerZ - A powerful rule engine and implementation of the Specification pattern. Debugging and ProfilingLibraries and tools for debugging and profiling code. APM - Monitoring extension collecting errors and statistics into SQLite/MySQL/StatsD. Barbushin PHP Console - Another web debugging console using Google Chrome. Blackfire.io - A low-overhead code profiler. Kint - A debugging and profiling tool. PHP Console - A web debugging console. PHP Debug Bar - A debugging toolbar. PHPBench - A benchmarking Framework. Tideways.io - Monitoring and profiling tool Tracy - A simple error detection, logging and time measuring library. xDebug - A debug and profile tool for PHP. XHProf - A profiling tool originally developed by Facebook. Z-Ray - A debug and profile tool for Zend Server. Build ToolsProject build and automation tools. Bob - A simple project automation tool. Box - A utility to build PHAR files. Construct - A PHP project/micro-package generator. Phake - A rake PHP clone library. Phing - A PHP project build system inspired by Apache Ant. Task RunnersLibraries for automating and running tasks. Bldr - A PHP Task runner built on Symfony components. Jobby - A PHP cron job manager without modifying crontab. Robo - A PHP Task runner with object-orientated configurations. Task - A pure PHP task runner inspired by Grunt and Gulp. NavigationTools for building navigation structures. KnpMenu - A menu library. Asset ManagementTools for managing, compressing and minifying website assets. JShrink - A JavaScript minifier library. Munee - An asset optimiser library. Puli - A library for determining assets absolute paths. BowerPHP - A PHP implementation of Bower. A package manager for the web GeolocationLibraries for geocoding addresses and working with latitudes and longitudes. GeoCoder - A geocoding library. GeoJSON - A GeoJSON implementation. GeoTools - A library of geo-related tools. PHPGeo - A simple geo library. Date and TimeLibraries for working with dates and times. CalendR - A calendar management library. Carbon - A simple DateTime API extension. Chronos - A DateTime API extension supporting both mutable and immutable date/time. Moment.php - Moment.js inspired PHP DateTime handler with i18n support. Yasumi - An library to help you calculate the dates and names of holidays. EventLibraries that are event-driven or implement non-blocking event loops. Amp - An event driven non-blocking I/O library. Broadway - An event source and CQRS library. Cake Event - An event dispatcher library (CP). Elephant.io - Yet another web socket library. Evenement - An event dispatcher library. Event - An event library with a focus on domain events. Hoa EventSource - An event source library. Hoa WebSocket - Another web socket library. Prooph Event Store - An event source component to persist event messages Ratchet - A web socket library. React - An event driven non-blocking I/O library. Rx.PHP - A reactive extension library. Workerman - An event driven non-blocking I/O library. LoggingLibraries for generating and working with log files. Monolog - A comprehensive logger. E-commerceLibraries and applications for taking payments and building online e-commerce stores. Money - A PHP implementation of Fowler’s money pattern. OmniPay - A framework agnostic multi-gateway payment processing library. Payum - A payment abstraction library. Shopware - Highly customizable e-commerce software Swap - An exchange rates library. Sylius - An open source e-commerce solution. PDFLibraries and software for working with PDF files. Dompdf - A HTML to PDF converter. PHPPdf - A library for generating PDFs and images from XML. Snappy - A PDF and image generation library. WKHTMLToPDF - A tool to convert HTML to PDF. OfficeLibraries for working with office suite documents. ExcelAnt - A library for manipulating Microsoft Excel documents. PHPPowerPoint - A library for working with Microsoft PowerPoint Presentations. PHPWord - A library for working with Microsoft Word documents. PHPSpreadsheet - A pure PHP library for reading and writing spreadsheet files (successor of PHPExcel) DatabaseLibraries for interacting with databases using object-relational mapping (ORM) or datamapping techniques. Atlas.Orm - A data mapper implementation for your persistence model in PHP. Aura.Sql - Provides an extension to the native PDO along with a profiler and connection locator. Aura.SqlQuery - Independent query builders for MySQL, PostgreSQL, SQLite, and Microsoft SQL Server. Baum - A nested set implementation for Eloquent. Cake ORM - Object-Relational Mapper, implemented using the DataMapper pattern (CP). Doctrine Extensions - A collection of Doctrine behavioural extensions. Doctrine - A comprehensive DBAL and ORM. Eloquent - A simple ORM (L5). LazyRecord - A fast ORM designed for simplicity, extendability and performance. Pomm - An Object Model Manager for PostgreSQL. Propel - A fast ORM, migration library and query builder. ProxyManager - A set of utilities to generate proxy objects for data mappers. RedBean - A lightweight, configuration-less ORM. Spot2 - A MySQL datamapper ORM. MigrationsLibraries to help manage database schemas and migrations. Doctrine Migrations - A migration library for Doctrine. Migrations - A migration management library. Phinx - Another database migration library. PHPMig - Another migration management library. Ruckusing - Database migrations for PHP ala ActiveRecord Migrations with support for MySQL, Postgres, SQLite. NoSQLLibraries for working with “NoSQL” backends. Monga - A MongoDB abstraction library. MongoQB - A MongoDB query builder library. PHPMongo - A MongoDB ORM. Predis - A feature complete Redis library. QueueLibraries for working with event and task queues. Bernard - A multibackend abstraction library. BunnyPHP - A performant pure-PHP AMQP (RabbitMQ) sync and also async (ReactPHP) library. Pheanstalk - A Beanstalkd client library. PHP AMQP - A pure PHP AMQP library. Tarantool Queue - PHP bindings for Tarantool Queue. Thumper - A RabbitMQ pattern library. SearchLibraries and software for indexing and performing search queries on data. Elastica - A client library for ElasticSearch. ElasticSearch PHP - The official client library for ElasticSearch. Solarium - A client library for Solr. Sphinx Search - Sphinx Search library provides SphinxQL indexing and searching features SphinxQL query builder - A query library for the Sphinx search engine. Command LineLibraries related to the command line. Aura.Cli - Provides the equivalent of request ( Context ) and response ( Stdio ) objects for the command line interface, including Getopt support, and an independent Help object for describing commands. Boris - A tiny PHP REPL. Cilex - A micro framework for building command line tools. CLI Menu - A library for building CLI menus. CLIFramework - A command-line framework supports zsh/bash completion generation, subcommands and option constraints. It also powers phpbrew. CLImate - A library for outputting colours and special formatting. Commando - Another simple command line opt parser. Cron Expression - A library to calculate cron run dates. GetOpt - A command line opt parser. GetOptionKit - Another command line opt parser. Hoa Console - Another command line library. OptParse - Another command line opt parser. Pecan - An event-driven, non-blocking shell. PsySH - Another PHP REPL. ShellWrap - A simple command line wrapper library. Authentication and AuthorizationLibraries for implementing user authentication and authorization. Aura.Auth - Provides authentication functionality and session tracking using various adapters. Hawk - A Hawk HTTP authentication library. SocialConnect Auth - An open source social sign (OAuth1\\OAuth2\\OpenID\\OpenIDConnect). Json Web Token - Json Tokens to authenticate and transmit information. OAuth 1.0 Client - An OAuth 1.0 client library. OAuth 2.0 Client - An OAuth 2.0 client library. OAuth2 Server - Another OAuth2 server implementation. OAuth2 Server - An OAuth2 authentication server, resource server and client library. Opauth - A multi-provider authentication framework. PHP oAuthLib - Another OAuth library. Sentinel Social - A library for social network authentication. Sentinel - A framework agnostic authentication &amp; authorisation library. TwitterOAuth - A Twitter OAuth library. TwitterSDK - A fully tested Twitter SDK. MarkupLibraries for working with markup. Cebe Markdown - An fast and extensible Markdown parser. Ciconia - Another Markdown parser that supports Github flavoured Markdown. CommonMark PHP - A Markdown parser which supports the full CommonMark spec. Decoda - A lightweight markup parser library. Emoji - A library that converts unicode characters and names into emoji images. HTML to Markdown - Converts HTML into Markdown. HTML5 PHP - An HTML5 parser and serializer library. Parsedown - Another Markdown parser. PHP Markdown - A Markdown parser. StringsLibraries for parsing and manipulating strings. Agent - A PHP desktop/mobile user agent parser, based on Mobiledetect. ANSI to HTML5 - An ANSI to HTML5 converter library. Color Jizz - A library for manipulating and converting colours. Device Detector - Another library for parsing user agent strings. Hoa String - Another UTF-8 string library. Jieba-PHP - A PHP port of Python’s jieba. Chinese text segmentation for natural language processing. Mobile-Detect - A lightweight PHP class for detecting mobile devices (including tablets). Patchwork UTF-8 - A portable library for working with UTF-8 strings. Slugify - A library to convert strings to slugs. SQL Formatter - A library for formatting SQL statements. Stringy - A string manipulation library with multibyte support. Text - A text manipulation library. UA Parser - A library for parsing user agent strings. URLify - A PHP port of Django’s URLify.js. UUID - A library for generating UUIDs. NumbersLibraries for working with numbers. ByteUnits - A library to parse, format and convert byte units in binary and metric systems. LibPhoneNumber for PHP - A PHP implementation of Google’s phone number handling library. Math - A library for working with large numbers. Numbers PHP - A library for working with numbers. PHP Conversion - Another library for converting between units of measure. PHP Units of Measure - A library for converting between units of measure. Filtering and ValidationLibraries for filtering and validating data. Aura.Filter - Provides tools to validate and sanitize objects and arrays. Cake Validation - Another validation library (CP). DMS Filter - An annotation filtering library. Filterus - A simple PHP filtering library. ISO-codes - A library for validating inputs according standards from ISO, International Finance, Public Administrations, GS1, Book Industry, Phone numbers &amp; Zipcodes for many countries MetaYaml - A schema validation library that supports YAML, JSON and XML. Respect Validation - A simple validation library. Upload - A library for handling file uploads and validation. Valitron - Another validation library. Volan - Another simplified validation library. APILibraries and web tools for developing APIs. API Platform - Expose in minutes an hypermedia REST API that embraces JSON-LD, Hydra format. Apigility - An API builder built with Zend Framework 2. Drest - A library for exposing Doctrine entities as REST resource endpoints. HAL - A Hypertext Application Language (HAL) builder library. Hateoas - A HATEOAS REST web service library. Negotiation - A content negotiation library. Restler - A lightweight framework to expose PHP methods as RESTful web API. wsdl2phpgenerator - A tool to generate PHP classes from SOAP WSDL files. CachingLibraries for caching data. Alternative PHP Cache (APC) - Open opcode cache for PHP. APIx Cache - A thin PSR-6 cache wrapper to various caching backends emphasising cache tagging and indexing. CacheTool - A tool to clear APC/opcode caches from the command line. Cake Cache - A caching library (CP). Doctrine Cache - A caching library. Metaphore - Cache slam defense using a semaphore to prevent dogpile effect. Stash - Another library for caching. Zend Cache - Another caching library (ZF2). Data Structure and StorageLibraries that implement data structure or storage techniques. Ardent - A library of data structures. Cake Collection - A simple collections library (CP). Collections - Collections Abstraction library for PHP. Fractal - A library for converting complex data structures to JSON output. Ginq - Another PHP library based on .NET’s LINQ. JsonMapper - A library that maps nested JSON structures onto PHP classes. Knapsack - Collection library inspired by Clojure’s sequences. PHP Collections - A simple collections library. PINQ - A PHP library based on .NET’s LINQ (Language Integrated Query). Porter - Data import abstraction framework. Serializer - A library for serialising and de-serialising data. Totem - A library to manage and create data changesets. YaLinqo - Yet Another LINQ to Objects for PHP. Zend Serializer - Another library for serialising and de-serialising data (ZF2). NotificationsLibraries for working with notification software. JoliNotif - A cross-platform library for desktop notification (support for Growl, notify-send, toaster, etc) Nod - A notification library (e.g., Growl). Notification Pusher - A standalone library for device push notifications. Notificato - A library for handling push notifications. Notificator - A lightweight notification library. Php-pushwoosh - A PHP Library to easily send push notifications with the Pushwoosh REST Web Services. DeploymentLibraries for project deployment. Deployer - A deployment tool. Envoy - A tool to run SSH tasks with PHP. Plum - A deployer library. Pomander - A deployment tool for PHP applications. Rocketeer - A fast and easy deployer for the PHP world. Internationalisation and LocalisationLibraries for Internationalization (I18n) and Localization (L10n). Aura.Intl - Provides internationalization (I18N) tools, specifically package-oriented per-locale message translation. Cake I18n - Message translation and localization for dates and numbers (CP) Third Party APIsLibraries for accessing third party APIs. Amazon Web Service SDK - The official PHP AWS SDK library. Campaign Monitor - The official Campaign Monitor PHP library. Digital Ocean - A library to interface with the Digital Ocean API. Dropbox SDK - The official PHP Dropbox SDK library. Github - A library to interface with the Github API. Mailgun The official Mailgun PHP API. PHP Github API - Another library to interface with the Github API. S3 Stream Wrapper - A stream wrapper library for Amazon S3. Stripe - The official Stripe PHP library. Twilio - The official Twilio PHP REST API. Twitter OAuth - A library to interface with Twitter’s OAuth workflow. Twitter REST - A library to interact with Twitter’s REST API. ExtensionsLibraries to help build PHP extensions. PHP CPP - A C++ library for developing PHP extensions. Zephir - A compiled language between PHP and C++ for developing PHP extensions. MiscellaneousUseful libraries or tools that don’t fit in the categories above. Annotations - An annotations library (part of Doctrine). BotMan - A framework agnostic PHP library to build cross-platform chat bots. Cake Utility - Utility classes such as Inflector, String, Hash, Security and Xml (CP). Chief - A command bus library. ClassPreloader - A library for optimising autoloading. Country List - A list of all countries with names and ISO 3166-1 codes. Embera - An Oembed consumer library. Essence - A library for extracting web media. Flux - A regular expression building library. Graphviz - A Graphviz library. Hprose-PHP - A very newbility RPC Library, support 25+ languages now. JSON Lint - A JSON lint utility. JSONPCallbackValidator - A library for validating JSONP callbacks. Jumper - A remote service executor library. LadyBug - A dumper library. Lambda PHP - A Lambda calculus interpreter in PHP. LiteCQRS - A CQRS (Command Query Responsibility Separation) library. Metrics - A simple metrics API library. noCAPTCHA - Helper for Google’s noCAPTCHA (reCAPTCHA). Nmap - A PHP wrapper around Nmap. Opengraph - An opengraph library. Pagerfanta - A pagination library. PHP Expression - A PHP expression language. PHP PassBook - A PHP library for iOS PassBook. PHP-GPIO - A library for playing with the Raspberry PI’s GPIO pins. PHP-ML - A library for Machine Learning in PHP. PHPCR - A PHP port of the Java Content Repository (JCR). PHPStack - A TCP/IP stack proof of concept written in PHP. print_o - An object graph visualizer. Procrastinator - A library for running time consuming tasks. Prooph Service Bus - Lightweight message bus supporting CQRS and Micro Services RMT - A library for versioning and releasing software. sabre/vobject - A library for parsing VCard and iCalendar objects. Slimdump - An easy dumper tool for MySQL. Spork - A process forking library. Sslurp - A library that makes dealing with SSL suck less. SuperClosure - A library that allows Closures to be serialized. Symfony VarDumper - A variable dumper component (SF). Underscore - A PHP port of the Underscore JS library. Whoops - A pretty error handling library. SoftwareSoftware for creating a development environment. PHP InstallationTools to help install and manage PHP on your computer. HomeBrew PHP - A PHP tap for HomeBrew. HomeBrew - A package manager for OSX. PHP Brew - A PHP version manager and installer. PHP Build - Another PHP version installer. PHP Env - Another PHP version manager. PHP OSX - A PHP installer for OSX. PHP Switch - Another version manager. VirtPHP - A tool for creating and managing isolated PHP environments. Development EnvironmentSoftware and tools for creating a sandboxed development environment. Ansible - A radically simple orchestration framework. Phansible - A web tool for building PHP development virtual machines with Ansible. Protobox - Another web tool for building PHP development virtual machines. PuPHPet - A web tool for building PHP development virtual machines. Puppet - A server automation framework and application. Vagrant - A portable development environment utility. Docker - A containerization platform. Virtual MachinesAlternative PHP virtual machines. Hack - A programming language for HHVM that interoperates seamlessly with PHP. HHVM - A Virtual Machine, Runtime and JIT for PHP by Facebook. HippyVM - Another PHP virtual machine. Text Editors and IDEsText Editors and Integrated Development Environments (IDE) with support for PHP. Atom - A hackable text editor. Atom IDE - An IDE extension for Atom. Eclipse for PHP Developers - A PHP IDE based on the Eclipse platform. Netbeans - An IDE with support for PHP and HTML5. PhpStorm - A commercial PHP IDE. VS Code - An open source code editor. Web ApplicationsWeb-based applications and tools. 3V4L - An online PHP &amp; HHVM shell. DBV - A database version control application. PHP Queue - An application for managing queueing backends. MailCatcher - A web tool for capturing and viewing emails. Cachet - The open source status page system. phpBeanstalkdAdmin - Monitoring and administration interface for Beanstalkd. phpRedisAdmin - A simple web interface to manage Redis databases. phpPgAdmin - A web-based administration tool for PostgreSQL. phpMyAdmin - A web interface for MySQL/MariaDB. Adminer - Database management in a single PHP file. Grav - A modern flat-file CMS. Lychee - An easy to use and great looking photo-management-system. InfrastructureInfrastructure for providing PHP applications and services. appserver.io - A multithreaded application server for PHP, written in PHP. php-pm - A process manager, supercharger and load balancer for PHP applications. ResourcesVarious resources, such as books, websites and articles, for improving your PHP development skills and knowledge. PHP WebsitesUseful PHP-related websites. Nomad PHP - A online PHP learning resource. PHP Best Practices - A PHP best practice guide. PHP FIG - The PHP Framework Interoperability Group. PHP Mentoring - Peer to peer PHP mentorship organization. PHP Package Development Standards - Package development standards for PHP. PHP School - Open Source Learning for PHP. PHP Security - A guide to PHP security. PHP The Right Way - A PHP best practice quick reference guide. PHP UG - A website to help people locate their nearest PHP user group (UG). PHP Versions - Lists which versions of PHP are available on several popular web hosts. PHP Weekly - A weekly PHP newsletter. PHPTrends - An overview of fastest growing PHP libraries. Securing PHP - A newsletter about PHP security and library recommendations. Seven PHP - A website that interviews members of the PHP community. PHP Annotated Monthly - A monthly digest of PHP news. Other WebsitesUseful websites related to web development. Atlassian Git Tutorials - A series of Git tutorials. Hg Init - A series of Mercurial tutorials. Learning Linux - A website for learning Linux. Semantic Versioning - A website explaining semantic versioning. Servers for Hackers - A newsletter about server management. The Open Web Application Security Project (OWASP) - An open software security community. WebSec IO - A web security community resource. PHP BooksFantastic PHP-related books. Functional Programming in PHP - This book will show you how to leverage these new PHP5.3+ features by understanding functional programming principles Grumpy PHPUnit - A book about unit testing with PHPUnit by Chris Hartjes. Mastering Object-Orientated PHP - A book about object-orientated PHP by Brandon Savage. Modern PHP New Features and Good Practices - A book about new PHP features and best practices by Josh Lockhart. Modernizing Legacy Applications in PHP - A book about modernizing legacy PHP applications by Paul M. Jones. PHP 7 Upgrade Guide - An ebook covering all of the features and changes in PHP 7 by Colin O’Dell. PHP Pandas - A book about learning to write PHP by Dayle Rees. Scaling PHP Applications - An ebook about scaling PHP applications by Steve Corona. Securing PHP: Core Concepts - A book about common security terms and practices for PHP by Chris Cornutt. Signaling PHP - A book about catching PCNTL signals in CLI scripts by Cal Evans. The Grumpy Programmer’s Guide to Building Testable PHP Applications - A book about building testing PHP applications by Chris Hartjes. XML Parsing with PHP - This book covers parsing and validating XML documents, leveraging XPath expressions, and working with namespaces as well as how to create and modify XML files programmatically. Domain-Driven Design in PHP - Real examples written in PHP showcasing DDD Architectural Styles. Other BooksBooks related to general computing and web development. Elasticsearch: The Definitive Guide - A guide to working with Elasticsearch by Clinton Gormley and Zachary Tong. Eloquent JavaScript - A book about JavaScript programming by Marijn Haverbeke. Head First Design Patterns - A book that expains software design patterns. Pro Git - A book about Git by Scott Chacon and Ben Straub. The Linux Command Line - A book about the Linux command line by William Shotts. The Tangled Web — Securing Web Applications - A book about securing web applications by Michal Zalewski. Understanding Computation - A book about computation theory by Tom Stuart. Vagrant Cookbook - A book about creating Vagrant environments by Erika Heidi. PHP VideosFantastic PHP-related videos. Nomad PHP Lightning Talks - 10 to 15 minute Lightning Talks by PHP community members. PHP UK Conference - A collection of videos from the PHP UK Conference. Programming with Anthony - A video series by Anthony Ferrara. Taking PHP Seriously - A talk outlining PHP’s strengths by Keith Adams of Facebook. PHP PodcastsPodcasts with a focus on PHP topics. PHP Town Hall - A casual PHP podcast by Ben Edmunds and Phil Sturgeon. Voices of the ElePHPant Interviews with the people that make the PHP community special. PHP Roundtable - The PHP Roundtable is a casual gathering of developers discussing topics that PHP nerds care about. Voices of the ElePHPant - Interviews with members of PHP community. PHP ReadingPHP-releated reading materials. Composer Primer - A Composer primer. Composer Stability Flags - An article about Composer stability flags. Composer Versioning - An article about Composer versioning. Create Your Own PHP Framework - A series of articles on how to make your own PHP framework by Fabien Potencier. Don’t Worry About BREACH - An article about the BREACH hack and CSRF tokens. On PHP 5.3, Lambda Functions and Closures - An article about lambda functions and closures. PHP Is Much Better Than You Think - An article about the PHP language and ecosystem. PHP Package Checklist - A checklist for successful PHP package development. PHP Sucks! But I Like It! - An article about the pros and cons of PHP. Preventing CSRF Attacks - An article on preventing CSRF attacks. Seven Ways to Screw Up BCrypt - An article about correct BCrypt implementation. Use Env - An article about using the unix environment helper. PHP Internals ReadingReading materials related to the PHP internals or performance. Disproving the Single Quotes Myth - An article about performance of single and double quoted strings. How Big Are PHP Arrays (And Values) Really? - An article about array internals. How Foreach Works - A detailed StackOverflow answer about foreach. How Long is a Piece of String - An article about string internals. PHP Evaluation Order - An article about evaluation order in PHP. PHP Internals Book - An online book about PHP internals, written by three core developers. PHP RFCs - The home of PHP RFCs (Request for Comments). Print vs Echo, Which One is Faster? - An article about print and echo performance. The PHP Ternary Operator. Fast or Not? - An article ternary performance. Understanding OpCodes - An article about opcodes. When Does Foreach Copy? - An article about the internals of foreach. Why Objects (Usually) Use Less Memory Than Arrays - An article about object and array internals. You’re Being Lied To - An article about internal ZVALs. Collecting Garbage: 1 2 3 - A series about the PHP garbage collection internals. PHP Source Code for Developers: 1 2 3 4 - A series about the PHP source code. PHP 杂志Fantastic PHP-related magazines. php[architect] - A monthly magazine dedicated to PHP.","categories":[{"name":"PHP","slug":"php","permalink":"https://war9.cn/categories/php/"}],"tags":[{"name":"PHP","slug":"PHP","permalink":"https://war9.cn/tags/PHP/"},{"name":"学习资料","slug":"学习资料","permalink":"https://war9.cn/tags/学习资料/"},{"name":"PHP资源","slug":"PHP资源","permalink":"https://war9.cn/tags/PHP资源/"},{"name":"php组件","slug":"php组件","permalink":"https://war9.cn/tags/php组件/"},{"name":"php框架","slug":"php框架","permalink":"https://war9.cn/tags/php框架/"}],"keywords":[{"name":"PHP","slug":"php","permalink":"https://war9.cn/categories/php/"}]},{"title":"Yii2 Audit插件的使用【日志记录插件】","slug":"yii2-audit插件的使用","date":"2018-01-02T04:47:00.000Z","updated":"2018-01-08T07:13:28.581Z","comments":true,"path":"2018/01/02/yii2-audit插件的使用.html","link":"","permalink":"https://war9.cn/2018/01/02/yii2-audit插件的使用.html","excerpt":"","text":"Yii2 Audit 插件的使用 Yii2-Audit插件是一个功能齐全的，用于记录和显示web 、 cli请求、数据库更改、php /js错误和相关数据的插件。 并且该插件是以module的形式安装于Yii中，使用起来极为方便。 项目地址：https://github.com/bedezign/yii2-audit 文档地址：https://bedezign.github.io/yii2-audit/ 功能清单[点击可跳转到对应介绍] 【Entries】记录Web、Cli请求 (核心功能) 【Trails】记录数据库变更 【Javascripts】记录JavaScript错误记录 【Errors】记录Yii2错误记录 记录cURL请求 记录SOAP请求 记录请求中发送的邮件 数据可视化统计 1.安装 1.1 本插件依赖于PHP mail parse扩展,如若使用请安装php_mailparse 并修改php.ini 启用该扩展 1.2 使用Composer安装源文件 1composer require --prefer-dist bedezign/yii2-audit:\"dev-master\" 1.3 导入数据库 1php yii migrate --migrationPath=@bedezign/yii2/audit/migrations 注意：导入前common/main-local里的数据库必须有一个名称为db的数据库配置。否则会报错。1234567'db' =&gt; [ 'class' =&gt; 'yii\\db\\Connection', 'dsn' =&gt; 'mysql:host=localhost;port=3306;dbname=yii2-audit', 'username' =&gt; 'root', 'password' =&gt; '', 'charset' =&gt; 'utf8',], 1.4 最简配置编辑config/main.php,在modules下加入：audit。更加完整的配置请查看链接 https://bedezign.github.io/yii2-audit/docs/module-configuration/123456&lt;?php$config = [ 'modules' =&gt; [ 'audit' =&gt; 'bedezign\\yii2\\audit\\Audit', ],]; 然后访问yourdomain.com/index.php?r=audit 即可查看访问详细情况。如图： 2.Audit功能使用介绍按照1.安装里面介绍的步骤，可能会出现没有权限访问的情况，那么接下来介绍如何配置该插件并详细介绍其功能。 2.1 【Entries】记录Web、Cli请求 记录字段如下: 记录字段名称 解释 其它说明 User 默认记录操作用户ID - IP 记录操作者IP - Request Method 请求方法 例如GET、POST、HEAD、PUT等 Ajax 是否是异步请求 - Route 请求的路由地址 - Duration 请求响应时长 - Memory 内存占用 - Created 请求时间 - 配置 本功能是插件的核心功能，因此若要使用其它功能，必须先把这里配置好。 完整配置请查看：https://bedezign.github.io/yii2-audit/docs/module-configuration/ 以下内容均为config/main.php配置文件的内容。123456'modules' =&gt; [ 'audit' =&gt; [ 'class' =&gt; 'bedezign\\yii2\\audit\\Audit', //在此加入下文介绍的配置 ]] db 指定数据库连接在使用了多数据库后，可以通过以下配置来指定一个数据库链接。 1'db' =&gt; 'myAuditDatabase', trackActions 要监听的action 1'trackActions' =&gt; ['*'], //监听全部action ignoreActions 要屏蔽的action，设置后将不在日志里记录这些action 1'ignoreActions' =&gt; ['audit/*', 'debug/*'], //设置不记录audit组件内的所有操作和debug路由下的所有操作 accessIps 允许访问audit组件的IP列表 1'accessIps' =&gt; ['127.0.0.1', '192.168.*'], //允许本地IP和192.168.IP段下的IP访问。如果为null则允许任何人访问 accessRoles 允许访问的角色列表 1'accessRoles' =&gt; ['admin'], //设置角色为admin的角色可以访问audit组件。如果为null则允许任何人访问 accessUsers 允许访问的User ID列表。 1'accessUsers' =&gt; [1,2], //设置ID为1或2的用户可以访问audit组件，如果为null则允许任何人访问 maxAge 日志生命周期 单位：天 1'maxAge' =&gt; 'debug', //永不删除 compressData 压缩数据。 panels 日志数据面板 12345'panels' =&gt; [ 'audit/request', //显示请求内容面板 'audit/error', //显示错误信息面板 'audit/trail', //显示数据库信息面板], 支持的面板列表如下： RequestPanel //跟踪所有传入web和控制台的请求数据。 AssetPanel //显示载入的前端资源 ConfigPanel //Yii 和PHP配置 DbPanel //数据库查询信息 ErrorPanel //记录PHP异常、错误。 JavascriptPanel //自动记录JavaScript错误信息 LogPanel //Yii日志 MailPanel //邮件记录 这里必须开启PHP的PHPmail扩展，不然报错 ProfilingPanel //应用程序配置信息 TrailPanel //数据库变更记录 ExtraDataPanel //额外定义的数据 CurlPanel //记录应用的cURL请求。（包含响应，日志，和请求头） SOAPPanel //记录应用的SOAP请求 YourOwnPanel //自定义Panel 通过路由 yourdomain.com/audit/entry/index 查看Web、Cli请求记录。 在记录以上字段的同时，如果配置了【Trails】【Mails】【Javascripts】【Errors】，则会显示对应的，通过该请求造成的【Trails】记录ID，【Mails】记录ID，【Javascripts】记录ID和【Errors】记录ID。如图：在POST hly-base-info/create 的同时，影响了数据库，并且在HlyBaseInfomodel里配置了AuditTrailBehavior，因此会记录数据库变更。数据库变更记录配置详见2.2 这里的Trails ID只是本次请求，导致的所有数据库变更中的最后一个，并不是完整的ID数组，完整的数据库变更还是要在Trails里查看。如图 在此就可以看到数据库完整的变化，这里的Entry ID指向了对应的操作日志。 查看请求详细记录 通过上面的列表，点击最左侧图标进入详细查看。里面提供了类似Yii2 Debug的功能。在显示请求详细的同时，也会附带几个面板[可通过配置决定显示哪些panel。如图： 2.2【Trails】记录数据库变更 记录字段 记录字段名称 解释 其它说明 Entry ID 操作记录ID - User ID 操作者ID - Action 动作 Create、Update、Delete 等 type model路径 eg.backend\\models\\HlyBaseInfo model ID model ID - Field 受影响的字段 - Diff 改变前后对比 这里会列举该记录被操作前的数据和被改变后的数据。如下图： 配置 记录数据库变更也很方便，只需要在需要记录的model的behaviors函数内加入AuditTrailBehavior：123456public function behaviors()&#123; return [ 'bedezign\\yii2\\audit\\AuditTrailBehavior' ];&#125; 比如记录Post表的变更记录。[会记录增/删/改操作]12345678910&lt;?phpclass Post extends \\yii\\db\\ActiveRecord&#123; public function behaviors() &#123; [ 'class'=&gt; 'bedezign\\yii2\\audit\\AuditTrailBehavior' ], &#125;&#125; 效果如图： 2.3 记录JavaScript错误记录 记录字段 记录字段名称 解释 其它说明 Entry ID 操作记录ID - Type 错误类型 - Origin 错误来源 例如 localhost/:31:5 //代表HTML源代码第31行有JavaScript错误 Message 错误信息 例如 Uncaught ReferenceError: alert1 is not defined 配置 记录JavaScript错误记录只需要在view视图里使用audit提供的JSLoggingAsset注册当前资源。 12&lt;?php\\bedezign\\yii2\\audit\\web\\JSLoggingAsset::register($this); 2.4 记录Yii2错误记录 记录字段 记录字段名称 解释 其它说明 Entry ID 操作记录ID - Message 错误信息 - ErrorCode 错误码 - File 文件路径 - Line 导致错误的行号 - Hash 错误哈希值 - Created 创建时间 - 如图： 配置 记录错误需要在配置文件config/main里配置,注意console的errorHandler需要设置成注释中的配置。1234567891011&lt;?php$config = [ 'components' =&gt; [ 'errorHandler' =&gt; [ // web error handler 'class' =&gt; '\\bedezign\\yii2\\audit\\components\\web\\ErrorHandler', // console error handler //'class' =&gt; '\\bedezign\\yii2\\audit\\components\\console\\ErrorHandler', ], ],];","categories":[{"name":"后端","slug":"backend","permalink":"https://war9.cn/categories/backend/"},{"name":"Yii2","slug":"backend/Yii2","permalink":"https://war9.cn/categories/backend/Yii2/"}],"tags":[{"name":"Yii2","slug":"Yii2","permalink":"https://war9.cn/tags/Yii2/"},{"name":"yii2-audit","slug":"yii2-audit","permalink":"https://war9.cn/tags/yii2-audit/"}],"keywords":[{"name":"后端","slug":"backend","permalink":"https://war9.cn/categories/backend/"},{"name":"Yii2","slug":"backend/Yii2","permalink":"https://war9.cn/categories/backend/Yii2/"}]},{"title":"Yii2 DatePicker小部件的使用","slug":"Yii2-DatePicker小部件的使用","date":"2018-01-02T03:51:00.000Z","updated":"2018-01-02T07:15:37.539Z","comments":true,"path":"2018/01/02/Yii2-DatePicker小部件的使用.html","link":"","permalink":"https://war9.cn/2018/01/02/Yii2-DatePicker小部件的使用.html","excerpt":"","text":"DatePicker 小部件是一个封装了Bootstrap DatePicker插件到Yii2中的一个插件。可以方便的由用户选择日期，以用于快速输入日期数据。该插件是基于Yii2 BootStrap3制作的。如果浏览器不支持Jquery。该组件仍然支持以下四种类型： Simple Input Markup //常用的简单input输入框类型 Component Markup - Addon Prepended //在input前加入 选择日期&amp;清空栏目 按钮 Component Markup - Addon Appended //在input后加入 选择日期&amp;清空栏目 按钮 Inline / Embedded Markup //嵌入式日期选择框 Date Range Markup (from and to dates) //日期范围,从A日期~B日期。 项目地址: https://github.com/kartik-v/yii2-widget-datepicker文档中未尽事宜查看插件手册：http://demos.krajee.com/widget-details/datepicker 安装 通过composer进行安装. 1composer require kartik-v/yii2-widget-datepicker \"@dev\" 部分参数解释 languge：组件显示语言， 缺省设置为：Yii::$app-&gt;language 。eg:en , zh-CN size: 组件大小 参数范围：[lg, md, sm, xs] name: 输入框input的name属性 如果DatePicker是TYPE_RANGE类型必须设置name2 attribute：设置model的属性。如果DatePicker是TYPE_RANGE类型必须设置attribute2 value：设置input的value属性。如果DatePicker是TYPE_RANGE类型可以设置value2 options: 设置input的其它配置，比如placeholder等。。如果DatePicker是TYPE_RANGE类型可以设置options2. separator: 分隔符。一般用于TYPE_RANGE类型的输入框。将在两个input中间显示一个分隔符。默认为“to”。 pluginEvents：插件事件数组。插件可以绑定以下几个事件[show,hide,clearDate,changeDate,changeMonth,changeYear,changeDecade,changeCentury]绑定事件到自定义函数可以进行如下配置： 12345678pluginEvents = [ \"show\" =&gt; \"function(e) &#123; # `e` here contains the extra attributes &#125;\", \"hide\" =&gt; \"function(e) &#123; # `e` here contains the extra attributes &#125;\", \"clearDate\" =&gt; \"function(e) &#123; # `e` here contains the extra attributes &#125;\", \"changeDate\" =&gt; \"function(e) &#123; # `e` here contains the extra attributes &#125;\", \"changeYear\" =&gt; \"function(e) &#123; # `e` here contains the extra attributes &#125;\", \"changeMonth\" =&gt; \"function(e) &#123; # `e` here contains the extra attributes &#125;\",]; readonly:设置input是否只读 pluginOptions：插件配置数组，常用配置如下：完整的配置文档请查看：http://bootstrap-datepicker.readthedocs.io/en/latest/options.html 配置名称 类型 其它说明 autoclose Boolean 默认False，是否自动关闭日期选择框。 clearBtn Boolean 默认False，是否在日期选择框下方显示清空按钮。 container String 默认Body，附加到某个元素上以用于弹出DatePicker。会设置该元素ID为‘#picker-container‘ startDate Date或String 设置该日期，那么该日期之前的日期将不可选择。 endDate Date或String 设置该日期，那么该日期之后的日期将不可选择。 format String 默认“mm/dd/yyyy”。设置日期格式 multidate Boolean或Number 默认False，如果设置为true将允许多选日期。如果特定某个数，将允许选择特定数个日期。 todayBtn Boolean 默认False，是否在日期选择框下方显示今日按钮。点击将输入今日日期。 todayHighlight Boolean 默认False，是否高亮显示今日日期。 type: 组件类型，缺省设置为 TYPE_COMPONENT_PREPEND 或2.参数范围：[TYPE_INPUT, //普通input输入框TYPE_COMPONENT_PREPEND,TYPE_COMPONENT_APPEND,TYPE_INLINE,TYPE_RANGE,TYPE_BUTTON] 以上分别对应 1 ~ 6，使用常量需要DatePicker::常量名称,例如：DatePicker::TYPE_COMPONENT_PREPEND,注意：官方文档中TYPE_INLINE和TYPE_RANGE的常量值不正确，两个常量顺序写错了。正确的TYPE_INLINE = 4,TYPE_RANGE = 5. 类型名称 是否支持手动输入 功能介绍 其它 TYPE_INPUT 支持 普通输入框,点击输入框，弹出日期选择 – TYPE_COMPONENT_PREPEND 支持 在输入框前加入两个按钮，分别是弹出日期选择和清空输入。 – TYPE_COMPONENT_APPEND 支持 在输入框后加入两个按钮，分别是弹出日期选择和清空输入。 – TYPE_RANGE 支持 日期范围专用，需要配置第二个输入框。两个输入框A和B，如果A日期大于B日期会自动将B日期同步为A日期。 必须配置name2或attribute2 参数，否则会报错。使用该选项需要先安装RANGE扩展。安装方法：composer require kartik-v/yii2-field-range “*” TYPE_INLINE 不支持 将总是显示一个嵌入式的日期选择框。输入框将被加上只读属性。 如果要允许输入日期，可以通过inlineOptions设置 TYPE_BUTTON 不支持 仅显示一个按钮，点击弹出日期选择框，值将被赋值到一个隐藏的输入框内。 可以通过buttonOptions进行配置。 快速使用使用的时候记的在头部引用组件。12&lt;?phpuse kartik\\date\\DatePicker; 不使用model的形式不使用ActiveForm和后台传来的model也可以直接在页面里输出该组件，代码如下123456789echo DatePicker::widget([ 'name' =&gt; 'check_issue_date', 'value' =&gt; date('Y-m-d', strtotime('+2 days')), 'options' =&gt; ['placeholder' =&gt; '请选择日期 ...'], 'pluginOptions' =&gt; [ 'format' =&gt; 'yyyy-mm-dd', 'todayHighlight' =&gt; true ]]); 显示效果如图： 使用model+ActiveForm的形式在controller里面将model传递给视图。123456&lt;?php $model = new ServiceHistory(); return $this-&gt;render('create', [ 'model' =&gt; $model, ]);?&gt; 在视图中，先创建ActiveForm，再输出DatePicker代码片段如下：12345678910111213141516171819&lt;?php $form = ActiveForm::begin([]); ?&gt;&lt;?phpecho DatePicker::widget([ 'model' =&gt; $model,//绑定后台传递的model 'attribute' =&gt; 'service_start',//model里的字段 'attribute2' =&gt; 'service_end',//model里的字段 'options' =&gt; ['placeholder' =&gt; '服务开始时间'],//设置input1的提示 'options2' =&gt; ['placeholder' =&gt; '服务结束时间'],//设置input2的提示 'type' =&gt; DatePicker::TYPE_RANGE,//设置插件类型为日期区间类型。 'form' =&gt; $form,//绑定form为activeForm。 'separator' =&gt; '&lt;i class=\"glyphicon glyphicon-resize-horizontal\"&gt;&lt;/i&gt;',//设置分隔符 'pluginOptions' =&gt; [//设置插件配置 'format' =&gt; 'yyyy-mm-dd',//设置日期格式 'autoclose' =&gt; true,//设置日期选择框自动关闭 'todayHighlight' =&gt; true,//设置今日日期高亮 'todayBtn' =&gt; true,//设置在日期选择框下方显示今日按钮。 ], ]);?&gt; 以上代码效果如图：","categories":[{"name":"后端","slug":"backend","permalink":"https://war9.cn/categories/backend/"},{"name":"Yii2","slug":"backend/Yii2","permalink":"https://war9.cn/categories/backend/Yii2/"}],"tags":[{"name":"Yii2","slug":"Yii2","permalink":"https://war9.cn/tags/Yii2/"},{"name":"DatePicker","slug":"DatePicker","permalink":"https://war9.cn/tags/DatePicker/"},{"name":"widget","slug":"widget","permalink":"https://war9.cn/tags/widget/"}],"keywords":[{"name":"后端","slug":"backend","permalink":"https://war9.cn/categories/backend/"},{"name":"Yii2","slug":"backend/Yii2","permalink":"https://war9.cn/categories/backend/Yii2/"}]},{"title":"第一篇Hexo文章","slug":"第一篇Hexo文章","date":"2017-12-28T07:22:00.000Z","updated":"2017-12-29T05:48:00.068Z","comments":true,"path":"2017/12/28/第一篇Hexo文章.html","link":"","permalink":"https://war9.cn/2017/12/28/第一篇Hexo文章.html","excerpt":"","text":"我的Hexo第一篇文章终于在各种搜索引擎，github搜索下。激动的开始写这篇文章. 时间轴： 2017/12/29 项目迁移到Coding..域名DNS解析转到DNS Pod 2017/12/29 域名DNS解析转到cloudflare下，支持SSL 2017/12/29 设置自定义域名war9.cn 2017/12/28 上传到我的Github 2017/12/27 安装snippet主题 2017/12/27 本地搭建Hexo博客","categories":[{"name":"其它","slug":"other","permalink":"https://war9.cn/categories/other/"}],"tags":[{"name":"Hexo","slug":"Hexo","permalink":"https://war9.cn/tags/Hexo/"},{"name":"github","slug":"github","permalink":"https://war9.cn/tags/github/"}],"keywords":[{"name":"其它","slug":"other","permalink":"https://war9.cn/categories/other/"}]}]}